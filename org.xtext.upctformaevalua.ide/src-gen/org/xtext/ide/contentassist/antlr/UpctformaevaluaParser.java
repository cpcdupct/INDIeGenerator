/*
 * generated by Xtext 2.17.1
 */
package org.xtext.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.ide.contentassist.antlr.internal.InternalUpctformaevaluaParser;
import org.xtext.services.UpctformaevaluaGrammarAccess;

public class UpctformaevaluaParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(UpctformaevaluaGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, UpctformaevaluaGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEvaluationUnitAccess().getAlternatives(), "rule__EvaluationUnit__Alternatives");
			builder.put(grammarAccess.getQuestionAccess().getAlternatives(), "rule__Question__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getTypeHoleAccess().getAlternatives(), "rule__TypeHole__Alternatives");
			builder.put(grammarAccess.getTypeGradeAccess().getAlternatives(), "rule__TypeGrade__Alternatives");
			builder.put(grammarAccess.getEvaluationAccess().getGroup(), "rule__Evaluation__Group__0");
			builder.put(grammarAccess.getEvaluationAccess().getGroup_4(), "rule__Evaluation__Group_4__0");
			builder.put(grammarAccess.getEvaluationAccess().getGroup_5(), "rule__Evaluation__Group_5__0");
			builder.put(grammarAccess.getEvaluationAccess().getGroup_5_1(), "rule__Evaluation__Group_5_1__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getEvaluationUnit_ImplAccess().getGroup(), "rule__EvaluationUnit_Impl__Group__0");
			builder.put(grammarAccess.getEvaluationUnit_ImplAccess().getGroup_4(), "rule__EvaluationUnit_Impl__Group_4__0");
			builder.put(grammarAccess.getEvaluationUnit_ImplAccess().getGroup_5(), "rule__EvaluationUnit_Impl__Group_5__0");
			builder.put(grammarAccess.getEvaluationUnit_ImplAccess().getGroup_5_3(), "rule__EvaluationUnit_Impl__Group_5_3__0");
			builder.put(grammarAccess.getQuestion_ImplAccess().getGroup(), "rule__Question_Impl__Group__0");
			builder.put(grammarAccess.getQuestion_ImplAccess().getGroup_3(), "rule__Question_Impl__Group_3__0");
			builder.put(grammarAccess.getQuestion_ImplAccess().getGroup_4(), "rule__Question_Impl__Group_4__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getTrainingAccess().getGroup(), "rule__Training__Group__0");
			builder.put(grammarAccess.getTrainingAccess().getGroup_4(), "rule__Training__Group_4__0");
			builder.put(grammarAccess.getTrainingAccess().getGroup_5(), "rule__Training__Group_5__0");
			builder.put(grammarAccess.getTrainingAccess().getGroup_6(), "rule__Training__Group_6__0");
			builder.put(grammarAccess.getTrainingAccess().getGroup_7(), "rule__Training__Group_7__0");
			builder.put(grammarAccess.getTrainingAccess().getGroup_7_3(), "rule__Training__Group_7_3__0");
			builder.put(grammarAccess.getFinalAccess().getGroup(), "rule__Final__Group__0");
			builder.put(grammarAccess.getFinalAccess().getGroup_4(), "rule__Final__Group_4__0");
			builder.put(grammarAccess.getFinalAccess().getGroup_5(), "rule__Final__Group_5__0");
			builder.put(grammarAccess.getFinalAccess().getGroup_5_3(), "rule__Final__Group_5_3__0");
			builder.put(grammarAccess.getSingleAnswerAccess().getGroup(), "rule__SingleAnswer__Group__0");
			builder.put(grammarAccess.getSingleAnswerAccess().getGroup_4(), "rule__SingleAnswer__Group_4__0");
			builder.put(grammarAccess.getSingleAnswerAccess().getGroup_4_3(), "rule__SingleAnswer__Group_4_3__0");
			builder.put(grammarAccess.getSingleAnswerAccess().getGroup_5(), "rule__SingleAnswer__Group_5__0");
			builder.put(grammarAccess.getSingleAnswerAccess().getGroup_6(), "rule__SingleAnswer__Group_6__0");
			builder.put(grammarAccess.getSingleAnswerAccess().getGroup_7(), "rule__SingleAnswer__Group_7__0");
			builder.put(grammarAccess.getMultipleAnswerAccess().getGroup(), "rule__MultipleAnswer__Group__0");
			builder.put(grammarAccess.getMultipleAnswerAccess().getGroup_4(), "rule__MultipleAnswer__Group_4__0");
			builder.put(grammarAccess.getMultipleAnswerAccess().getGroup_4_3(), "rule__MultipleAnswer__Group_4_3__0");
			builder.put(grammarAccess.getMultipleAnswerAccess().getGroup_5(), "rule__MultipleAnswer__Group_5__0");
			builder.put(grammarAccess.getMultipleAnswerAccess().getGroup_6(), "rule__MultipleAnswer__Group_6__0");
			builder.put(grammarAccess.getFillingAnswerAccess().getGroup(), "rule__FillingAnswer__Group__0");
			builder.put(grammarAccess.getFillingAnswerAccess().getGroup_3(), "rule__FillingAnswer__Group_3__0");
			builder.put(grammarAccess.getFillingAnswerAccess().getGroup_4(), "rule__FillingAnswer__Group_4__0");
			builder.put(grammarAccess.getFillingAnswerAccess().getGroup_5(), "rule__FillingAnswer__Group_5__0");
			builder.put(grammarAccess.getFillingAnswerAccess().getGroup_5_3(), "rule__FillingAnswer__Group_5_3__0");
			builder.put(grammarAccess.getTrueOrFalseAccess().getGroup(), "rule__TrueOrFalse__Group__0");
			builder.put(grammarAccess.getTrueOrFalseAccess().getGroup_3(), "rule__TrueOrFalse__Group_3__0");
			builder.put(grammarAccess.getTrueOrFalseAccess().getGroup_3_3(), "rule__TrueOrFalse__Group_3_3__0");
			builder.put(grammarAccess.getTrueOrFalseAccess().getGroup_4(), "rule__TrueOrFalse__Group_4__0");
			builder.put(grammarAccess.getTrueOrFalseAccess().getGroup_5(), "rule__TrueOrFalse__Group_5__0");
			builder.put(grammarAccess.getParagraphAccess().getGroup(), "rule__Paragraph__Group__0");
			builder.put(grammarAccess.getSingleAccess().getGroup(), "rule__Single__Group__0");
			builder.put(grammarAccess.getMultipleAccess().getGroup(), "rule__Multiple__Group__0");
			builder.put(grammarAccess.getMultipleAccess().getGroup_2(), "rule__Multiple__Group_2__0");
			builder.put(grammarAccess.getHoleAccess().getGroup(), "rule__Hole__Group__0");
			builder.put(grammarAccess.getHoleAccess().getGroup_3(), "rule__Hole__Group_3__0");
			builder.put(grammarAccess.getHoleAccess().getGroup_4(), "rule__Hole__Group_4__0");
			builder.put(grammarAccess.getAssertionAccess().getGroup(), "rule__Assertion__Group__0");
			builder.put(grammarAccess.getAssertionAccess().getGroup_2(), "rule__Assertion__Group_2__0");
			builder.put(grammarAccess.getEvaluationAccess().getNameAssignment_2(), "rule__Evaluation__NameAssignment_2");
			builder.put(grammarAccess.getEvaluationAccess().getNameAssignment_4_1(), "rule__Evaluation__NameAssignment_4_1");
			builder.put(grammarAccess.getEvaluationAccess().getUnitsAssignment_5_0(), "rule__Evaluation__UnitsAssignment_5_0");
			builder.put(grammarAccess.getEvaluationAccess().getUnitsAssignment_5_1_1(), "rule__Evaluation__UnitsAssignment_5_1_1");
			builder.put(grammarAccess.getEvaluationUnit_ImplAccess().getNameAssignment_2(), "rule__EvaluationUnit_Impl__NameAssignment_2");
			builder.put(grammarAccess.getEvaluationUnit_ImplAccess().getNumberquestionsAssignment_4_1(), "rule__EvaluationUnit_Impl__NumberquestionsAssignment_4_1");
			builder.put(grammarAccess.getEvaluationUnit_ImplAccess().getQuestionsAssignment_5_2(), "rule__EvaluationUnit_Impl__QuestionsAssignment_5_2");
			builder.put(grammarAccess.getEvaluationUnit_ImplAccess().getQuestionsAssignment_5_3_1(), "rule__EvaluationUnit_Impl__QuestionsAssignment_5_3_1");
			builder.put(grammarAccess.getQuestion_ImplAccess().getCorrectfeedbackAssignment_3_1(), "rule__Question_Impl__CorrectfeedbackAssignment_3_1");
			builder.put(grammarAccess.getQuestion_ImplAccess().getIncorrectfeedbackAssignment_4_1(), "rule__Question_Impl__IncorrectfeedbackAssignment_4_1");
			builder.put(grammarAccess.getTrainingAccess().getNameAssignment_2(), "rule__Training__NameAssignment_2");
			builder.put(grammarAccess.getTrainingAccess().getNumberquestionsAssignment_4_1(), "rule__Training__NumberquestionsAssignment_4_1");
			builder.put(grammarAccess.getTrainingAccess().getAttemptsAssignment_5_1(), "rule__Training__AttemptsAssignment_5_1");
			builder.put(grammarAccess.getTrainingAccess().getGradeAssignment_6_1(), "rule__Training__GradeAssignment_6_1");
			builder.put(grammarAccess.getTrainingAccess().getQuestionsAssignment_7_2(), "rule__Training__QuestionsAssignment_7_2");
			builder.put(grammarAccess.getTrainingAccess().getQuestionsAssignment_7_3_1(), "rule__Training__QuestionsAssignment_7_3_1");
			builder.put(grammarAccess.getFinalAccess().getNameAssignment_2(), "rule__Final__NameAssignment_2");
			builder.put(grammarAccess.getFinalAccess().getNumberquestionsAssignment_4_1(), "rule__Final__NumberquestionsAssignment_4_1");
			builder.put(grammarAccess.getFinalAccess().getQuestionsAssignment_5_2(), "rule__Final__QuestionsAssignment_5_2");
			builder.put(grammarAccess.getFinalAccess().getQuestionsAssignment_5_3_1(), "rule__Final__QuestionsAssignment_5_3_1");
			builder.put(grammarAccess.getSingleAnswerAccess().getStatementsAssignment_3(), "rule__SingleAnswer__StatementsAssignment_3");
			builder.put(grammarAccess.getSingleAnswerAccess().getAnswersAssignment_4_2(), "rule__SingleAnswer__AnswersAssignment_4_2");
			builder.put(grammarAccess.getSingleAnswerAccess().getAnswersAssignment_4_3_1(), "rule__SingleAnswer__AnswersAssignment_4_3_1");
			builder.put(grammarAccess.getSingleAnswerAccess().getCorrectanswerAssignment_5_1(), "rule__SingleAnswer__CorrectanswerAssignment_5_1");
			builder.put(grammarAccess.getSingleAnswerAccess().getCorrectfeedbackAssignment_6_1(), "rule__SingleAnswer__CorrectfeedbackAssignment_6_1");
			builder.put(grammarAccess.getSingleAnswerAccess().getIncorrectfeedbackAssignment_7_1(), "rule__SingleAnswer__IncorrectfeedbackAssignment_7_1");
			builder.put(grammarAccess.getMultipleAnswerAccess().getStatementsAssignment_3(), "rule__MultipleAnswer__StatementsAssignment_3");
			builder.put(grammarAccess.getMultipleAnswerAccess().getAnswersAssignment_4_2(), "rule__MultipleAnswer__AnswersAssignment_4_2");
			builder.put(grammarAccess.getMultipleAnswerAccess().getAnswersAssignment_4_3_1(), "rule__MultipleAnswer__AnswersAssignment_4_3_1");
			builder.put(grammarAccess.getMultipleAnswerAccess().getCorrectfeedbackAssignment_5_1(), "rule__MultipleAnswer__CorrectfeedbackAssignment_5_1");
			builder.put(grammarAccess.getMultipleAnswerAccess().getIncorrectfeedbackAssignment_6_1(), "rule__MultipleAnswer__IncorrectfeedbackAssignment_6_1");
			builder.put(grammarAccess.getFillingAnswerAccess().getCorrectfeedbackAssignment_3_1(), "rule__FillingAnswer__CorrectfeedbackAssignment_3_1");
			builder.put(grammarAccess.getFillingAnswerAccess().getIncorrectfeedbackAssignment_4_1(), "rule__FillingAnswer__IncorrectfeedbackAssignment_4_1");
			builder.put(grammarAccess.getFillingAnswerAccess().getHolesAssignment_5_2(), "rule__FillingAnswer__HolesAssignment_5_2");
			builder.put(grammarAccess.getFillingAnswerAccess().getHolesAssignment_5_3_1(), "rule__FillingAnswer__HolesAssignment_5_3_1");
			builder.put(grammarAccess.getTrueOrFalseAccess().getAssertionsAssignment_3_2(), "rule__TrueOrFalse__AssertionsAssignment_3_2");
			builder.put(grammarAccess.getTrueOrFalseAccess().getAssertionsAssignment_3_3_1(), "rule__TrueOrFalse__AssertionsAssignment_3_3_1");
			builder.put(grammarAccess.getTrueOrFalseAccess().getCorrectfeedbackAssignment_4_1(), "rule__TrueOrFalse__CorrectfeedbackAssignment_4_1");
			builder.put(grammarAccess.getTrueOrFalseAccess().getIncorrectfeedbackAssignment_5_1(), "rule__TrueOrFalse__IncorrectfeedbackAssignment_5_1");
			builder.put(grammarAccess.getParagraphAccess().getTextAssignment_1(), "rule__Paragraph__TextAssignment_1");
			builder.put(grammarAccess.getSingleAccess().getTextAssignment_1(), "rule__Single__TextAssignment_1");
			builder.put(grammarAccess.getMultipleAccess().getTextAssignment_2_0(), "rule__Multiple__TextAssignment_2_0");
			builder.put(grammarAccess.getMultipleAccess().getValueAssignment_3(), "rule__Multiple__ValueAssignment_3");
			builder.put(grammarAccess.getHoleAccess().getTextAssignment_3_1(), "rule__Hole__TextAssignment_3_1");
			builder.put(grammarAccess.getHoleAccess().getTypeAssignment_4_1(), "rule__Hole__TypeAssignment_4_1");
			builder.put(grammarAccess.getAssertionAccess().getTextAssignment_2_0(), "rule__Assertion__TextAssignment_2_0");
			builder.put(grammarAccess.getAssertionAccess().getValueAssignment_3(), "rule__Assertion__ValueAssignment_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private UpctformaevaluaGrammarAccess grammarAccess;

	@Override
	protected InternalUpctformaevaluaParser createParser() {
		InternalUpctformaevaluaParser result = new InternalUpctformaevaluaParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public UpctformaevaluaGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(UpctformaevaluaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
