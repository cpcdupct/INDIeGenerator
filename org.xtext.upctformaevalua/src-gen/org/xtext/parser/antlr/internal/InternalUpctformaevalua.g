/*
 * generated by Xtext 2.17.1
 */
grammar InternalUpctformaevalua;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.UpctformaevaluaGrammarAccess;

}

@parser::members {

 	private UpctformaevaluaGrammarAccess grammarAccess;

    public InternalUpctformaevaluaParser(TokenStream input, UpctformaevaluaGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Evaluation";
   	}

   	@Override
   	protected UpctformaevaluaGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleEvaluation
entryRuleEvaluation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvaluationRule()); }
	iv_ruleEvaluation=ruleEvaluation
	{ $current=$iv_ruleEvaluation.current; }
	EOF;

// Rule Evaluation
ruleEvaluation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvaluationAccess().getEvaluationAction_0(),
					$current);
			}
		)
		otherlv_1='Evaluation'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvaluationAccess().getEvaluationKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvaluationAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvaluationRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctformaevalua.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getEvaluationAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='package'
			{
				newLeafNode(otherlv_4, grammarAccess.getEvaluationAccess().getPackageKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvaluationAccess().getNameQualifiedNameParserRuleCall_4_1_0());
					}
					lv_name_5_0=ruleQualifiedName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvaluationRule());
						}
						set(
							$current,
							"name",
							lv_name_5_0,
							"org.xtext.Upctformaevalua.QualifiedName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=';'
			{
				newLeafNode(otherlv_6, grammarAccess.getEvaluationAccess().getSemicolonKeyword_4_2());
			}
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEvaluationAccess().getUnitsEvaluationUnitParserRuleCall_5_0_0());
					}
					lv_units_7_0=ruleEvaluationUnit
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvaluationRule());
						}
						add(
							$current,
							"units",
							lv_units_7_0,
							"org.xtext.Upctformaevalua.EvaluationUnit");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getEvaluationAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEvaluationAccess().getUnitsEvaluationUnitParserRuleCall_5_1_1_0());
						}
						lv_units_9_0=ruleEvaluationUnit
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvaluationRule());
							}
							add(
								$current,
								"units",
								lv_units_9_0,
								"org.xtext.Upctformaevalua.EvaluationUnit");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getEvaluationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleEvaluationUnit
entryRuleEvaluationUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvaluationUnitRule()); }
	iv_ruleEvaluationUnit=ruleEvaluationUnit
	{ $current=$iv_ruleEvaluationUnit.current; }
	EOF;

// Rule EvaluationUnit
ruleEvaluationUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEvaluationUnitAccess().getEvaluationUnit_ImplParserRuleCall_0());
		}
		this_EvaluationUnit_Impl_0=ruleEvaluationUnit_Impl
		{
			$current = $this_EvaluationUnit_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvaluationUnitAccess().getTrainingParserRuleCall_1());
		}
		this_Training_1=ruleTraining
		{
			$current = $this_Training_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEvaluationUnitAccess().getFinalParserRuleCall_2());
		}
		this_Final_2=ruleFinal
		{
			$current = $this_Final_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	iv_ruleQuestion=ruleQuestion
	{ $current=$iv_ruleQuestion.current; }
	EOF;

// Rule Question
ruleQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQuestionAccess().getQuestion_ImplParserRuleCall_0());
		}
		this_Question_Impl_0=ruleQuestion_Impl
		{
			$current = $this_Question_Impl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQuestionAccess().getSingleAnswerParserRuleCall_1());
		}
		this_SingleAnswer_1=ruleSingleAnswer
		{
			$current = $this_SingleAnswer_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQuestionAccess().getMultipleAnswerParserRuleCall_2());
		}
		this_MultipleAnswer_2=ruleMultipleAnswer
		{
			$current = $this_MultipleAnswer_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQuestionAccess().getFillingAnswerParserRuleCall_3());
		}
		this_FillingAnswer_3=ruleFillingAnswer
		{
			$current = $this_FillingAnswer_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQuestionAccess().getTrueOrFalseParserRuleCall_4());
		}
		this_TrueOrFalse_4=ruleTrueOrFalse
		{
			$current = $this_TrueOrFalse_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEvaluationUnit_Impl
entryRuleEvaluationUnit_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEvaluationUnit_ImplRule()); }
	iv_ruleEvaluationUnit_Impl=ruleEvaluationUnit_Impl
	{ $current=$iv_ruleEvaluationUnit_Impl.current; }
	EOF;

// Rule EvaluationUnit_Impl
ruleEvaluationUnit_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEvaluationUnit_ImplAccess().getEvaluationUnitAction_0(),
					$current);
			}
		)
		otherlv_1='EvaluationUnit'
		{
			newLeafNode(otherlv_1, grammarAccess.getEvaluationUnit_ImplAccess().getEvaluationUnitKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEvaluationUnit_ImplAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvaluationUnit_ImplRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctformaevalua.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEvaluationUnit_ImplAccess().getLanguageEvaluationLanguageTypeEnumRuleCall_3_0());
				}
				lv_language_3_0=ruleEvaluationLanguageType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEvaluationUnit_ImplRule());
					}
					set(
						$current,
						"language",
						lv_language_3_0,
						"org.xtext.Upctformaevalua.EvaluationLanguageType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getEvaluationUnit_ImplAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='numberquestions'
			{
				newLeafNode(otherlv_5, grammarAccess.getEvaluationUnit_ImplAccess().getNumberquestionsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvaluationUnit_ImplAccess().getNumberquestionsEIntParserRuleCall_5_1_0());
					}
					lv_numberquestions_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvaluationUnit_ImplRule());
						}
						set(
							$current,
							"numberquestions",
							lv_numberquestions_6_0,
							"org.xtext.Upctformaevalua.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='questions'
			{
				newLeafNode(otherlv_7, grammarAccess.getEvaluationUnit_ImplAccess().getQuestionsKeyword_6_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getEvaluationUnit_ImplAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEvaluationUnit_ImplAccess().getQuestionsQuestionParserRuleCall_6_2_0());
					}
					lv_questions_9_0=ruleQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEvaluationUnit_ImplRule());
						}
						add(
							$current,
							"questions",
							lv_questions_9_0,
							"org.xtext.Upctformaevalua.Question");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getEvaluationUnit_ImplAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEvaluationUnit_ImplAccess().getQuestionsQuestionParserRuleCall_6_3_1_0());
						}
						lv_questions_11_0=ruleQuestion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEvaluationUnit_ImplRule());
							}
							add(
								$current,
								"questions",
								lv_questions_11_0,
								"org.xtext.Upctformaevalua.Question");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getEvaluationUnit_ImplAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getEvaluationUnit_ImplAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleQuestion_Impl
entryRuleQuestion_Impl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestion_ImplRule()); }
	iv_ruleQuestion_Impl=ruleQuestion_Impl
	{ $current=$iv_ruleQuestion_Impl.current; }
	EOF;

// Rule Question_Impl
ruleQuestion_Impl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getQuestion_ImplAccess().getQuestionAction_0(),
					$current);
			}
		)
		otherlv_1='Question'
		{
			newLeafNode(otherlv_1, grammarAccess.getQuestion_ImplAccess().getQuestionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getQuestion_ImplAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='correctfeedback'
			{
				newLeafNode(otherlv_3, grammarAccess.getQuestion_ImplAccess().getCorrectfeedbackKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestion_ImplAccess().getCorrectfeedbackEStringParserRuleCall_3_1_0());
					}
					lv_correctfeedback_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestion_ImplRule());
						}
						set(
							$current,
							"correctfeedback",
							lv_correctfeedback_4_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='incorrectfeedback'
			{
				newLeafNode(otherlv_5, grammarAccess.getQuestion_ImplAccess().getIncorrectfeedbackKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getQuestion_ImplAccess().getIncorrectfeedbackEStringParserRuleCall_4_1_0());
					}
					lv_incorrectfeedback_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQuestion_ImplRule());
						}
						set(
							$current,
							"incorrectfeedback",
							lv_incorrectfeedback_6_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getQuestion_ImplAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTraining
entryRuleTraining returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrainingRule()); }
	iv_ruleTraining=ruleTraining
	{ $current=$iv_ruleTraining.current; }
	EOF;

// Rule Training
ruleTraining returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrainingAccess().getTrainingAction_0(),
					$current);
			}
		)
		otherlv_1='Training'
		{
			newLeafNode(otherlv_1, grammarAccess.getTrainingAccess().getTrainingKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTrainingAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrainingRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctformaevalua.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTrainingAccess().getLanguageEvaluationLanguageTypeEnumRuleCall_3_0());
				}
				lv_language_3_0=ruleEvaluationLanguageType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrainingRule());
					}
					set(
						$current,
						"language",
						lv_language_3_0,
						"org.xtext.Upctformaevalua.EvaluationLanguageType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getTrainingAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='numberquestions'
			{
				newLeafNode(otherlv_5, grammarAccess.getTrainingAccess().getNumberquestionsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTrainingAccess().getNumberquestionsEIntParserRuleCall_5_1_0());
					}
					lv_numberquestions_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrainingRule());
						}
						set(
							$current,
							"numberquestions",
							lv_numberquestions_6_0,
							"org.xtext.Upctformaevalua.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='Attempts'
			{
				newLeafNode(otherlv_7, grammarAccess.getTrainingAccess().getAttemptsKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTrainingAccess().getAttemptsEIntParserRuleCall_6_1_0());
					}
					lv_Attempts_8_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrainingRule());
						}
						set(
							$current,
							"Attempts",
							lv_Attempts_8_0,
							"org.xtext.Upctformaevalua.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_9='grade'
			{
				newLeafNode(otherlv_9, grammarAccess.getTrainingAccess().getGradeKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTrainingAccess().getGradeTypeGradeEnumRuleCall_7_1_0());
					}
					lv_grade_10_0=ruleTypeGrade
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrainingRule());
						}
						set(
							$current,
							"grade",
							lv_grade_10_0,
							"org.xtext.Upctformaevalua.TypeGrade");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='questions'
			{
				newLeafNode(otherlv_11, grammarAccess.getTrainingAccess().getQuestionsKeyword_8_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getTrainingAccess().getLeftCurlyBracketKeyword_8_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTrainingAccess().getQuestionsQuestionParserRuleCall_8_2_0());
					}
					lv_questions_13_0=ruleQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrainingRule());
						}
						add(
							$current,
							"questions",
							lv_questions_13_0,
							"org.xtext.Upctformaevalua.Question");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getTrainingAccess().getCommaKeyword_8_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTrainingAccess().getQuestionsQuestionParserRuleCall_8_3_1_0());
						}
						lv_questions_15_0=ruleQuestion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTrainingRule());
							}
							add(
								$current,
								"questions",
								lv_questions_15_0,
								"org.xtext.Upctformaevalua.Question");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getTrainingAccess().getRightCurlyBracketKeyword_8_4());
			}
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getTrainingAccess().getRightCurlyBracketKeyword_9());
		}
	)
;

// Entry rule entryRuleFinal
entryRuleFinal returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFinalRule()); }
	iv_ruleFinal=ruleFinal
	{ $current=$iv_ruleFinal.current; }
	EOF;

// Rule Final
ruleFinal returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFinalAccess().getFinalAction_0(),
					$current);
			}
		)
		otherlv_1='Final'
		{
			newLeafNode(otherlv_1, grammarAccess.getFinalAccess().getFinalKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFinalAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFinalRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.Upctformaevalua.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFinalAccess().getLanguageEvaluationLanguageTypeEnumRuleCall_3_0());
				}
				lv_language_3_0=ruleEvaluationLanguageType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFinalRule());
					}
					set(
						$current,
						"language",
						lv_language_3_0,
						"org.xtext.Upctformaevalua.EvaluationLanguageType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getFinalAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='numberquestions'
			{
				newLeafNode(otherlv_5, grammarAccess.getFinalAccess().getNumberquestionsKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFinalAccess().getNumberquestionsEIntParserRuleCall_5_1_0());
					}
					lv_numberquestions_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFinalRule());
						}
						set(
							$current,
							"numberquestions",
							lv_numberquestions_6_0,
							"org.xtext.Upctformaevalua.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='questions'
			{
				newLeafNode(otherlv_7, grammarAccess.getFinalAccess().getQuestionsKeyword_6_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getFinalAccess().getLeftCurlyBracketKeyword_6_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFinalAccess().getQuestionsQuestionParserRuleCall_6_2_0());
					}
					lv_questions_9_0=ruleQuestion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFinalRule());
						}
						add(
							$current,
							"questions",
							lv_questions_9_0,
							"org.xtext.Upctformaevalua.Question");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getFinalAccess().getCommaKeyword_6_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFinalAccess().getQuestionsQuestionParserRuleCall_6_3_1_0());
						}
						lv_questions_11_0=ruleQuestion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFinalRule());
							}
							add(
								$current,
								"questions",
								lv_questions_11_0,
								"org.xtext.Upctformaevalua.Question");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getFinalAccess().getRightCurlyBracketKeyword_6_4());
			}
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getFinalAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSingleAnswer
entryRuleSingleAnswer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleAnswerRule()); }
	iv_ruleSingleAnswer=ruleSingleAnswer
	{ $current=$iv_ruleSingleAnswer.current; }
	EOF;

// Rule SingleAnswer
ruleSingleAnswer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SingleAnswer'
		{
			newLeafNode(otherlv_0, grammarAccess.getSingleAnswerAccess().getSingleAnswerKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getSingleAnswerAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='statement'
		{
			newLeafNode(otherlv_2, grammarAccess.getSingleAnswerAccess().getStatementKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleAnswerAccess().getStatementsParagraphParserRuleCall_3_0());
				}
				lv_statements_3_0=ruleParagraph
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleAnswerRule());
					}
					set(
						$current,
						"statements",
						lv_statements_3_0,
						"org.xtext.Upctformaevalua.Paragraph");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='answers'
			{
				newLeafNode(otherlv_4, grammarAccess.getSingleAnswerAccess().getAnswersKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getSingleAnswerAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleAnswerAccess().getAnswersSingleParserRuleCall_4_2_0());
					}
					lv_answers_6_0=ruleSingle
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleAnswerRule());
						}
						add(
							$current,
							"answers",
							lv_answers_6_0,
							"org.xtext.Upctformaevalua.Single");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getSingleAnswerAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSingleAnswerAccess().getAnswersSingleParserRuleCall_4_3_1_0());
						}
						lv_answers_8_0=ruleSingle
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSingleAnswerRule());
							}
							add(
								$current,
								"answers",
								lv_answers_8_0,
								"org.xtext.Upctformaevalua.Single");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getSingleAnswerAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='correct'
			{
				newLeafNode(otherlv_10, grammarAccess.getSingleAnswerAccess().getCorrectKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleAnswerAccess().getCorrectanswerEIntParserRuleCall_5_1_0());
					}
					lv_correctanswer_11_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleAnswerRule());
						}
						set(
							$current,
							"correctanswer",
							lv_correctanswer_11_0,
							"org.xtext.Upctformaevalua.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='correctfeedback'
			{
				newLeafNode(otherlv_12, grammarAccess.getSingleAnswerAccess().getCorrectfeedbackKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleAnswerAccess().getCorrectfeedbackEStringParserRuleCall_6_1_0());
					}
					lv_correctfeedback_13_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleAnswerRule());
						}
						set(
							$current,
							"correctfeedback",
							lv_correctfeedback_13_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_14='incorrectfeedback'
			{
				newLeafNode(otherlv_14, grammarAccess.getSingleAnswerAccess().getIncorrectfeedbackKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSingleAnswerAccess().getIncorrectfeedbackEStringParserRuleCall_7_1_0());
					}
					lv_incorrectfeedback_15_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSingleAnswerRule());
						}
						set(
							$current,
							"incorrectfeedback",
							lv_incorrectfeedback_15_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getSingleAnswerAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleMultipleAnswer
entryRuleMultipleAnswer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleAnswerRule()); }
	iv_ruleMultipleAnswer=ruleMultipleAnswer
	{ $current=$iv_ruleMultipleAnswer.current; }
	EOF;

// Rule MultipleAnswer
ruleMultipleAnswer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MultipleAnswer'
		{
			newLeafNode(otherlv_0, grammarAccess.getMultipleAnswerAccess().getMultipleAnswerKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMultipleAnswerAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='statement'
		{
			newLeafNode(otherlv_2, grammarAccess.getMultipleAnswerAccess().getStatementKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMultipleAnswerAccess().getStatementsParagraphParserRuleCall_3_0());
				}
				lv_statements_3_0=ruleParagraph
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultipleAnswerRule());
					}
					set(
						$current,
						"statements",
						lv_statements_3_0,
						"org.xtext.Upctformaevalua.Paragraph");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='answers'
			{
				newLeafNode(otherlv_4, grammarAccess.getMultipleAnswerAccess().getAnswersKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getMultipleAnswerAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMultipleAnswerAccess().getAnswersMultipleParserRuleCall_4_2_0());
					}
					lv_answers_6_0=ruleMultiple
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultipleAnswerRule());
						}
						add(
							$current,
							"answers",
							lv_answers_6_0,
							"org.xtext.Upctformaevalua.Multiple");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getMultipleAnswerAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMultipleAnswerAccess().getAnswersMultipleParserRuleCall_4_3_1_0());
						}
						lv_answers_8_0=ruleMultiple
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMultipleAnswerRule());
							}
							add(
								$current,
								"answers",
								lv_answers_8_0,
								"org.xtext.Upctformaevalua.Multiple");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getMultipleAnswerAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_10='correctfeedback'
			{
				newLeafNode(otherlv_10, grammarAccess.getMultipleAnswerAccess().getCorrectfeedbackKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMultipleAnswerAccess().getCorrectfeedbackEStringParserRuleCall_5_1_0());
					}
					lv_correctfeedback_11_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultipleAnswerRule());
						}
						set(
							$current,
							"correctfeedback",
							lv_correctfeedback_11_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_12='incorrectfeedback'
			{
				newLeafNode(otherlv_12, grammarAccess.getMultipleAnswerAccess().getIncorrectfeedbackKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMultipleAnswerAccess().getIncorrectfeedbackEStringParserRuleCall_6_1_0());
					}
					lv_incorrectfeedback_13_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultipleAnswerRule());
						}
						set(
							$current,
							"incorrectfeedback",
							lv_incorrectfeedback_13_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getMultipleAnswerAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleFillingAnswer
entryRuleFillingAnswer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFillingAnswerRule()); }
	iv_ruleFillingAnswer=ruleFillingAnswer
	{ $current=$iv_ruleFillingAnswer.current; }
	EOF;

// Rule FillingAnswer
ruleFillingAnswer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFillingAnswerAccess().getFillingAnswerAction_0(),
					$current);
			}
		)
		otherlv_1='FillingAnswer'
		{
			newLeafNode(otherlv_1, grammarAccess.getFillingAnswerAccess().getFillingAnswerKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFillingAnswerAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='correctfeedback'
			{
				newLeafNode(otherlv_3, grammarAccess.getFillingAnswerAccess().getCorrectfeedbackKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFillingAnswerAccess().getCorrectfeedbackEStringParserRuleCall_3_1_0());
					}
					lv_correctfeedback_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFillingAnswerRule());
						}
						set(
							$current,
							"correctfeedback",
							lv_correctfeedback_4_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='incorrectfeedback'
			{
				newLeafNode(otherlv_5, grammarAccess.getFillingAnswerAccess().getIncorrectfeedbackKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFillingAnswerAccess().getIncorrectfeedbackEStringParserRuleCall_4_1_0());
					}
					lv_incorrectfeedback_6_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFillingAnswerRule());
						}
						set(
							$current,
							"incorrectfeedback",
							lv_incorrectfeedback_6_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_7='holes'
			{
				newLeafNode(otherlv_7, grammarAccess.getFillingAnswerAccess().getHolesKeyword_5_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getFillingAnswerAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFillingAnswerAccess().getHolesHoleParserRuleCall_5_2_0());
					}
					lv_holes_9_0=ruleHole
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFillingAnswerRule());
						}
						add(
							$current,
							"holes",
							lv_holes_9_0,
							"org.xtext.Upctformaevalua.Hole");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getFillingAnswerAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFillingAnswerAccess().getHolesHoleParserRuleCall_5_3_1_0());
						}
						lv_holes_11_0=ruleHole
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFillingAnswerRule());
							}
							add(
								$current,
								"holes",
								lv_holes_11_0,
								"org.xtext.Upctformaevalua.Hole");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getFillingAnswerAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getFillingAnswerAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTrueOrFalse
entryRuleTrueOrFalse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueOrFalseRule()); }
	iv_ruleTrueOrFalse=ruleTrueOrFalse
	{ $current=$iv_ruleTrueOrFalse.current; }
	EOF;

// Rule TrueOrFalse
ruleTrueOrFalse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrueOrFalseAccess().getTrueOrFalseAction_0(),
					$current);
			}
		)
		otherlv_1='TrueOrFalse'
		{
			newLeafNode(otherlv_1, grammarAccess.getTrueOrFalseAccess().getTrueOrFalseKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTrueOrFalseAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='assertions'
			{
				newLeafNode(otherlv_3, grammarAccess.getTrueOrFalseAccess().getAssertionsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getTrueOrFalseAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTrueOrFalseAccess().getAssertionsAssertionParserRuleCall_3_2_0());
					}
					lv_assertions_5_0=ruleAssertion
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrueOrFalseRule());
						}
						add(
							$current,
							"assertions",
							lv_assertions_5_0,
							"org.xtext.Upctformaevalua.Assertion");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getTrueOrFalseAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTrueOrFalseAccess().getAssertionsAssertionParserRuleCall_3_3_1_0());
						}
						lv_assertions_7_0=ruleAssertion
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTrueOrFalseRule());
							}
							add(
								$current,
								"assertions",
								lv_assertions_7_0,
								"org.xtext.Upctformaevalua.Assertion");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getTrueOrFalseAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='correctfeedback'
			{
				newLeafNode(otherlv_9, grammarAccess.getTrueOrFalseAccess().getCorrectfeedbackKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTrueOrFalseAccess().getCorrectfeedbackEStringParserRuleCall_4_1_0());
					}
					lv_correctfeedback_10_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrueOrFalseRule());
						}
						set(
							$current,
							"correctfeedback",
							lv_correctfeedback_10_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_11='incorrectfeedback'
			{
				newLeafNode(otherlv_11, grammarAccess.getTrueOrFalseAccess().getIncorrectfeedbackKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTrueOrFalseAccess().getIncorrectfeedbackEStringParserRuleCall_5_1_0());
					}
					lv_incorrectfeedback_12_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTrueOrFalseRule());
						}
						set(
							$current,
							"incorrectfeedback",
							lv_incorrectfeedback_12_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getTrueOrFalseAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleParagraph
entryRuleParagraph returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParagraphRule()); }
	iv_ruleParagraph=ruleParagraph
	{ $current=$iv_ruleParagraph.current; }
	EOF;

// Rule Paragraph
ruleParagraph returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParagraphAccess().getParagraphAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getParagraphAccess().getTextEStringParserRuleCall_1_0());
				}
				lv_text_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParagraphRule());
					}
					set(
						$current,
						"text",
						lv_text_1_0,
						"org.xtext.Upctformaevalua.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSingle
entryRuleSingle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSingleRule()); }
	iv_ruleSingle=ruleSingle
	{ $current=$iv_ruleSingle.current; }
	EOF;

// Rule Single
ruleSingle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSingleAccess().getSingleAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSingleAccess().getTextEStringParserRuleCall_1_0());
				}
				lv_text_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSingleRule());
					}
					set(
						$current,
						"text",
						lv_text_1_0,
						"org.xtext.Upctformaevalua.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleMultiple
entryRuleMultiple returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultipleRule()); }
	iv_ruleMultiple=ruleMultiple
	{ $current=$iv_ruleMultiple.current; }
	EOF;

// Rule Multiple
ruleMultiple returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMultipleAccess().getMultipleAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMultipleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMultipleAccess().getTextEStringParserRuleCall_2_0_0());
					}
					lv_text_2_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultipleRule());
						}
						set(
							$current,
							"text",
							lv_text_2_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getMultipleAccess().getCommaKeyword_2_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getMultipleAccess().getValueEBooleanParserRuleCall_3_0());
				}
				lv_value_4_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultipleRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"org.xtext.Upctformaevalua.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMultipleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

// Entry rule entryRuleHole
entryRuleHole returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHoleRule()); }
	iv_ruleHole=ruleHole
	{ $current=$iv_ruleHole.current; }
	EOF;

// Rule Hole
ruleHole returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getHoleAccess().getHoleAction_0(),
					$current);
			}
		)
		otherlv_1='Hole'
		{
			newLeafNode(otherlv_1, grammarAccess.getHoleAccess().getHoleKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getHoleAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='text'
			{
				newLeafNode(otherlv_3, grammarAccess.getHoleAccess().getTextKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHoleAccess().getTextEStringParserRuleCall_3_1_0());
					}
					lv_text_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHoleRule());
						}
						set(
							$current,
							"text",
							lv_text_4_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='type'
			{
				newLeafNode(otherlv_5, grammarAccess.getHoleAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getHoleAccess().getTypeTypeHoleEnumRuleCall_4_1_0());
					}
					lv_type_6_0=ruleTypeHole
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getHoleRule());
						}
						set(
							$current,
							"type",
							lv_type_6_0,
							"org.xtext.Upctformaevalua.TypeHole");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getHoleAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAssertion
entryRuleAssertion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssertionRule()); }
	iv_ruleAssertion=ruleAssertion
	{ $current=$iv_ruleAssertion.current; }
	EOF;

// Rule Assertion
ruleAssertion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAssertionAccess().getAssertionAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAssertionAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAssertionAccess().getTextEStringParserRuleCall_2_0_0());
					}
					lv_text_2_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAssertionRule());
						}
						set(
							$current,
							"text",
							lv_text_2_0,
							"org.xtext.Upctformaevalua.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getAssertionAccess().getCommaKeyword_2_1());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAssertionAccess().getValueEBooleanParserRuleCall_3_0());
				}
				lv_value_4_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssertionRule());
					}
					set(
						$current,
						"value",
						lv_value_4_0,
						"org.xtext.Upctformaevalua.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAssertionAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Rule EvaluationLanguageType
ruleEvaluationLanguageType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='ES'
			{
				$current = grammarAccess.getEvaluationLanguageTypeAccess().getESEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEvaluationLanguageTypeAccess().getESEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='EN'
			{
				$current = grammarAccess.getEvaluationLanguageTypeAccess().getENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEvaluationLanguageTypeAccess().getENEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='FR'
			{
				$current = grammarAccess.getEvaluationLanguageTypeAccess().getFREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getEvaluationLanguageTypeAccess().getFREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='GR'
			{
				$current = grammarAccess.getEvaluationLanguageTypeAccess().getGREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getEvaluationLanguageTypeAccess().getGREnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='LI'
			{
				$current = grammarAccess.getEvaluationLanguageTypeAccess().getLIEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getEvaluationLanguageTypeAccess().getLIEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule TypeHole
ruleTypeHole returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='visible'
			{
				$current = grammarAccess.getTypeHoleAccess().getVisibleEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeHoleAccess().getVisibleEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='hole'
			{
				$current = grammarAccess.getTypeHoleAccess().getHoleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeHoleAccess().getHoleEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule TypeGrade
ruleTypeGrade returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='highest'
			{
				$current = grammarAccess.getTypeGradeAccess().getHighestEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTypeGradeAccess().getHighestEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='middle'
			{
				$current = grammarAccess.getTypeGradeAccess().getMiddleEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTypeGradeAccess().getMiddleEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='lowest'
			{
				$current = grammarAccess.getTypeGradeAccess().getLowestEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getTypeGradeAccess().getLowestEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
