/*
 * generated by Xtext 2.17.1
 */
package org.xtext.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class UpctformaevaluaGrammarAccess extends AbstractGrammarElementFinder {
	
	public class EvaluationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Evaluation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEvaluationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEvaluationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPackageKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNameQualifiedNameParserRuleCall_4_1_0 = (RuleCall)cNameAssignment_4_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cUnitsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cUnitsEvaluationUnitParserRuleCall_5_0_0 = (RuleCall)cUnitsAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cUnitsAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cUnitsEvaluationUnitParserRuleCall_5_1_1_0 = (RuleCall)cUnitsAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Evaluation:
		//	{Evaluation}
		//	'Evaluation'
		//	name=EString
		//	'{' ('package' name=QualifiedName ';')? (units+=EvaluationUnit ("," units+=EvaluationUnit)*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Evaluation} 'Evaluation' name=EString '{' ('package' name=QualifiedName ';')? (units+=EvaluationUnit (","
		//units+=EvaluationUnit)*)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Evaluation}
		public Action getEvaluationAction_0() { return cEvaluationAction_0; }
		
		//'Evaluation'
		public Keyword getEvaluationKeyword_1() { return cEvaluationKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('package' name=QualifiedName ';')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'package'
		public Keyword getPackageKeyword_4_0() { return cPackageKeyword_4_0; }
		
		//name=QualifiedName
		public Assignment getNameAssignment_4_1() { return cNameAssignment_4_1; }
		
		//QualifiedName
		public RuleCall getNameQualifiedNameParserRuleCall_4_1_0() { return cNameQualifiedNameParserRuleCall_4_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_4_2() { return cSemicolonKeyword_4_2; }
		
		//(units+=EvaluationUnit ("," units+=EvaluationUnit)*)?
		public Group getGroup_5() { return cGroup_5; }
		
		//units+=EvaluationUnit
		public Assignment getUnitsAssignment_5_0() { return cUnitsAssignment_5_0; }
		
		//EvaluationUnit
		public RuleCall getUnitsEvaluationUnitParserRuleCall_5_0_0() { return cUnitsEvaluationUnitParserRuleCall_5_0_0; }
		
		//("," units+=EvaluationUnit)*
		public Group getGroup_5_1() { return cGroup_5_1; }
		
		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }
		
		//units+=EvaluationUnit
		public Assignment getUnitsAssignment_5_1_1() { return cUnitsAssignment_5_1_1; }
		
		//EvaluationUnit
		public RuleCall getUnitsEvaluationUnitParserRuleCall_5_1_1_0() { return cUnitsEvaluationUnitParserRuleCall_5_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class EvaluationUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.EvaluationUnit");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEvaluationUnit_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTrainingParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFinalParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//EvaluationUnit:
		//	EvaluationUnit_Impl | Training | Final;
		@Override public ParserRule getRule() { return rule; }
		
		//EvaluationUnit_Impl | Training | Final
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//EvaluationUnit_Impl
		public RuleCall getEvaluationUnit_ImplParserRuleCall_0() { return cEvaluationUnit_ImplParserRuleCall_0; }
		
		//Training
		public RuleCall getTrainingParserRuleCall_1() { return cTrainingParserRuleCall_1; }
		
		//Final
		public RuleCall getFinalParserRuleCall_2() { return cFinalParserRuleCall_2; }
	}
	public class QuestionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Question");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQuestion_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSingleAnswerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cMultipleAnswerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cFillingAnswerParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTrueOrFalseParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Question:
		//	Question_Impl | SingleAnswer | MultipleAnswer | FillingAnswer | TrueOrFalse;
		@Override public ParserRule getRule() { return rule; }
		
		//Question_Impl | SingleAnswer | MultipleAnswer | FillingAnswer | TrueOrFalse
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Question_Impl
		public RuleCall getQuestion_ImplParserRuleCall_0() { return cQuestion_ImplParserRuleCall_0; }
		
		//SingleAnswer
		public RuleCall getSingleAnswerParserRuleCall_1() { return cSingleAnswerParserRuleCall_1; }
		
		//MultipleAnswer
		public RuleCall getMultipleAnswerParserRuleCall_2() { return cMultipleAnswerParserRuleCall_2; }
		
		//FillingAnswer
		public RuleCall getFillingAnswerParserRuleCall_3() { return cFillingAnswerParserRuleCall_3; }
		
		//TrueOrFalse
		public RuleCall getTrueOrFalseParserRuleCall_4() { return cTrueOrFalseParserRuleCall_4; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class EvaluationUnit_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.EvaluationUnit_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEvaluationUnitAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEvaluationUnitKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cLanguageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLanguageEvaluationLanguageTypeEnumRuleCall_3_0 = (RuleCall)cLanguageAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNumberquestionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNumberquestionsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNumberquestionsEIntParserRuleCall_5_1_0 = (RuleCall)cNumberquestionsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cQuestionsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cQuestionsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cQuestionsQuestionParserRuleCall_6_2_0 = (RuleCall)cQuestionsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cQuestionsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cQuestionsQuestionParserRuleCall_6_3_1_0 = (RuleCall)cQuestionsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//EvaluationUnit_Impl EvaluationUnit:
		//	{EvaluationUnit}
		//	'EvaluationUnit'
		//	name=EString
		//	language=EvaluationLanguageType
		//	'{' ('numberquestions' numberquestions=EInt)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{EvaluationUnit} 'EvaluationUnit' name=EString language=EvaluationLanguageType '{' ('numberquestions'
		//numberquestions=EInt)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{EvaluationUnit}
		public Action getEvaluationUnitAction_0() { return cEvaluationUnitAction_0; }
		
		//'EvaluationUnit'
		public Keyword getEvaluationUnitKeyword_1() { return cEvaluationUnitKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//language=EvaluationLanguageType
		public Assignment getLanguageAssignment_3() { return cLanguageAssignment_3; }
		
		//EvaluationLanguageType
		public RuleCall getLanguageEvaluationLanguageTypeEnumRuleCall_3_0() { return cLanguageEvaluationLanguageTypeEnumRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('numberquestions' numberquestions=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'numberquestions'
		public Keyword getNumberquestionsKeyword_5_0() { return cNumberquestionsKeyword_5_0; }
		
		//numberquestions=EInt
		public Assignment getNumberquestionsAssignment_5_1() { return cNumberquestionsAssignment_5_1; }
		
		//EInt
		public RuleCall getNumberquestionsEIntParserRuleCall_5_1_0() { return cNumberquestionsEIntParserRuleCall_5_1_0; }
		
		//('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'questions'
		public Keyword getQuestionsKeyword_6_0() { return cQuestionsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_6_2() { return cQuestionsAssignment_6_2; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_6_2_0() { return cQuestionsQuestionParserRuleCall_6_2_0; }
		
		//("," questions+=Question)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_6_3_1() { return cQuestionsAssignment_6_3_1; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_6_3_1_0() { return cQuestionsQuestionParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class Question_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Question_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cQuestionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cQuestionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCorrectfeedbackKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_3_1_0 = (RuleCall)cCorrectfeedbackAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIncorrectfeedbackKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_4_1_0 = (RuleCall)cIncorrectfeedbackAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Question_Impl Question:
		//	{Question}
		//	'Question'
		//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Question} 'Question' '{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Question}
		public Action getQuestionAction_0() { return cQuestionAction_0; }
		
		//'Question'
		public Keyword getQuestionKeyword_1() { return cQuestionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_3_0() { return cCorrectfeedbackKeyword_3_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_3_1() { return cCorrectfeedbackAssignment_3_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_3_1_0() { return cCorrectfeedbackEStringParserRuleCall_3_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_4_0() { return cIncorrectfeedbackKeyword_4_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_4_1() { return cIncorrectfeedbackAssignment_4_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_4_1_0() { return cIncorrectfeedbackEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class TrainingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Training");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTrainingAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTrainingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cLanguageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLanguageEvaluationLanguageTypeEnumRuleCall_3_0 = (RuleCall)cLanguageAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNumberquestionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNumberquestionsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNumberquestionsEIntParserRuleCall_5_1_0 = (RuleCall)cNumberquestionsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cAttemptsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAttemptsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cAttemptsEIntParserRuleCall_6_1_0 = (RuleCall)cAttemptsAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cGradeKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cGradeAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cGradeTypeGradeEnumRuleCall_7_1_0 = (RuleCall)cGradeAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cQuestionsKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cQuestionsAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cQuestionsQuestionParserRuleCall_8_2_0 = (RuleCall)cQuestionsAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cQuestionsAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cQuestionsQuestionParserRuleCall_8_3_1_0 = (RuleCall)cQuestionsAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Training:
		//	{Training}
		//	'Training'
		//	name=EString
		//	language=EvaluationLanguageType
		//	'{' ('numberquestions' numberquestions=EInt)? ('Attempts' Attempts=EInt)? ('grade' grade=TypeGrade)? ('questions' '{'
		//	questions+=Question ("," questions+=Question)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Training} 'Training' name=EString language=EvaluationLanguageType '{' ('numberquestions' numberquestions=EInt)?
		//('Attempts' Attempts=EInt)? ('grade' grade=TypeGrade)? ('questions' '{' questions+=Question ("," questions+=Question)*
		//'}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Training}
		public Action getTrainingAction_0() { return cTrainingAction_0; }
		
		//'Training'
		public Keyword getTrainingKeyword_1() { return cTrainingKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//language=EvaluationLanguageType
		public Assignment getLanguageAssignment_3() { return cLanguageAssignment_3; }
		
		//EvaluationLanguageType
		public RuleCall getLanguageEvaluationLanguageTypeEnumRuleCall_3_0() { return cLanguageEvaluationLanguageTypeEnumRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('numberquestions' numberquestions=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'numberquestions'
		public Keyword getNumberquestionsKeyword_5_0() { return cNumberquestionsKeyword_5_0; }
		
		//numberquestions=EInt
		public Assignment getNumberquestionsAssignment_5_1() { return cNumberquestionsAssignment_5_1; }
		
		//EInt
		public RuleCall getNumberquestionsEIntParserRuleCall_5_1_0() { return cNumberquestionsEIntParserRuleCall_5_1_0; }
		
		//('Attempts' Attempts=EInt)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'Attempts'
		public Keyword getAttemptsKeyword_6_0() { return cAttemptsKeyword_6_0; }
		
		//Attempts=EInt
		public Assignment getAttemptsAssignment_6_1() { return cAttemptsAssignment_6_1; }
		
		//EInt
		public RuleCall getAttemptsEIntParserRuleCall_6_1_0() { return cAttemptsEIntParserRuleCall_6_1_0; }
		
		//('grade' grade=TypeGrade)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'grade'
		public Keyword getGradeKeyword_7_0() { return cGradeKeyword_7_0; }
		
		//grade=TypeGrade
		public Assignment getGradeAssignment_7_1() { return cGradeAssignment_7_1; }
		
		//TypeGrade
		public RuleCall getGradeTypeGradeEnumRuleCall_7_1_0() { return cGradeTypeGradeEnumRuleCall_7_1_0; }
		
		//('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'questions'
		public Keyword getQuestionsKeyword_8_0() { return cQuestionsKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_8_2() { return cQuestionsAssignment_8_2; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_8_2_0() { return cQuestionsQuestionParserRuleCall_8_2_0; }
		
		//("," questions+=Question)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_8_3_1() { return cQuestionsAssignment_8_3_1; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_8_3_1_0() { return cQuestionsQuestionParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class FinalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Final");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFinalAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFinalKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cLanguageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLanguageEvaluationLanguageTypeEnumRuleCall_3_0 = (RuleCall)cLanguageAssignment_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cNumberquestionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cNumberquestionsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cNumberquestionsEIntParserRuleCall_5_1_0 = (RuleCall)cNumberquestionsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cQuestionsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cQuestionsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cQuestionsQuestionParserRuleCall_6_2_0 = (RuleCall)cQuestionsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cQuestionsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cQuestionsQuestionParserRuleCall_6_3_1_0 = (RuleCall)cQuestionsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Final:
		//	{Final}
		//	'Final'
		//	name=EString
		//	language=EvaluationLanguageType
		//	'{' ('numberquestions' numberquestions=EInt)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Final} 'Final' name=EString language=EvaluationLanguageType '{' ('numberquestions' numberquestions=EInt)? ('questions'
		//'{' questions+=Question ("," questions+=Question)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Final}
		public Action getFinalAction_0() { return cFinalAction_0; }
		
		//'Final'
		public Keyword getFinalKeyword_1() { return cFinalKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//language=EvaluationLanguageType
		public Assignment getLanguageAssignment_3() { return cLanguageAssignment_3; }
		
		//EvaluationLanguageType
		public RuleCall getLanguageEvaluationLanguageTypeEnumRuleCall_3_0() { return cLanguageEvaluationLanguageTypeEnumRuleCall_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//('numberquestions' numberquestions=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'numberquestions'
		public Keyword getNumberquestionsKeyword_5_0() { return cNumberquestionsKeyword_5_0; }
		
		//numberquestions=EInt
		public Assignment getNumberquestionsAssignment_5_1() { return cNumberquestionsAssignment_5_1; }
		
		//EInt
		public RuleCall getNumberquestionsEIntParserRuleCall_5_1_0() { return cNumberquestionsEIntParserRuleCall_5_1_0; }
		
		//('questions' '{' questions+=Question ("," questions+=Question)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'questions'
		public Keyword getQuestionsKeyword_6_0() { return cQuestionsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_6_2() { return cQuestionsAssignment_6_2; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_6_2_0() { return cQuestionsQuestionParserRuleCall_6_2_0; }
		
		//("," questions+=Question)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//questions+=Question
		public Assignment getQuestionsAssignment_6_3_1() { return cQuestionsAssignment_6_3_1; }
		
		//Question
		public RuleCall getQuestionsQuestionParserRuleCall_6_3_1_0() { return cQuestionsQuestionParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class SingleAnswerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.SingleAnswer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSingleAnswerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cStatementKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStatementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStatementsParagraphParserRuleCall_3_0 = (RuleCall)cStatementsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAnswersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAnswersAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAnswersSingleParserRuleCall_4_2_0 = (RuleCall)cAnswersAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAnswersAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAnswersSingleParserRuleCall_4_3_1_0 = (RuleCall)cAnswersAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCorrectKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCorrectanswerAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cCorrectanswerEIntParserRuleCall_5_1_0 = (RuleCall)cCorrectanswerAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCorrectfeedbackKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_6_1_0 = (RuleCall)cCorrectfeedbackAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cIncorrectfeedbackKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_7_1_0 = (RuleCall)cIncorrectfeedbackAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//SingleAnswer:
		//	'SingleAnswer'
		//	'{'
		//	'statement' statements=Paragraph ('answers' '{' answers+=Single ("," answers+=Single)* '}')? ('correct'
		//	correctanswer=EInt)? ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SingleAnswer' '{' 'statement' statements=Paragraph ('answers' '{' answers+=Single ("," answers+=Single)* '}')?
		//('correct' correctanswer=EInt)? ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback'
		//incorrectfeedback=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//'SingleAnswer'
		public Keyword getSingleAnswerKeyword_0() { return cSingleAnswerKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'statement'
		public Keyword getStatementKeyword_2() { return cStatementKeyword_2; }
		
		//statements=Paragraph
		public Assignment getStatementsAssignment_3() { return cStatementsAssignment_3; }
		
		//Paragraph
		public RuleCall getStatementsParagraphParserRuleCall_3_0() { return cStatementsParagraphParserRuleCall_3_0; }
		
		//('answers' '{' answers+=Single ("," answers+=Single)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'answers'
		public Keyword getAnswersKeyword_4_0() { return cAnswersKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//answers+=Single
		public Assignment getAnswersAssignment_4_2() { return cAnswersAssignment_4_2; }
		
		//Single
		public RuleCall getAnswersSingleParserRuleCall_4_2_0() { return cAnswersSingleParserRuleCall_4_2_0; }
		
		//("," answers+=Single)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//answers+=Single
		public Assignment getAnswersAssignment_4_3_1() { return cAnswersAssignment_4_3_1; }
		
		//Single
		public RuleCall getAnswersSingleParserRuleCall_4_3_1_0() { return cAnswersSingleParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('correct' correctanswer=EInt)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'correct'
		public Keyword getCorrectKeyword_5_0() { return cCorrectKeyword_5_0; }
		
		//correctanswer=EInt
		public Assignment getCorrectanswerAssignment_5_1() { return cCorrectanswerAssignment_5_1; }
		
		//EInt
		public RuleCall getCorrectanswerEIntParserRuleCall_5_1_0() { return cCorrectanswerEIntParserRuleCall_5_1_0; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_6_0() { return cCorrectfeedbackKeyword_6_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_6_1() { return cCorrectfeedbackAssignment_6_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_6_1_0() { return cCorrectfeedbackEStringParserRuleCall_6_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_7_0() { return cIncorrectfeedbackKeyword_7_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_7_1() { return cIncorrectfeedbackAssignment_7_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_7_1_0() { return cIncorrectfeedbackEStringParserRuleCall_7_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class MultipleAnswerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.MultipleAnswer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMultipleAnswerKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cStatementKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cStatementsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cStatementsParagraphParserRuleCall_3_0 = (RuleCall)cStatementsAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAnswersKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAnswersAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAnswersMultipleParserRuleCall_4_2_0 = (RuleCall)cAnswersAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAnswersAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAnswersMultipleParserRuleCall_4_3_1_0 = (RuleCall)cAnswersAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCorrectfeedbackKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_5_1_0 = (RuleCall)cCorrectfeedbackAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cIncorrectfeedbackKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_6_1_0 = (RuleCall)cIncorrectfeedbackAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//MultipleAnswer:
		//	'MultipleAnswer'
		//	'{'
		//	'statement' statements=Paragraph ('answers' '{' answers+=Multiple ("," answers+=Multiple)* '}')? ('correctfeedback'
		//	correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MultipleAnswer' '{' 'statement' statements=Paragraph ('answers' '{' answers+=Multiple ("," answers+=Multiple)* '}')?
		//('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//'MultipleAnswer'
		public Keyword getMultipleAnswerKeyword_0() { return cMultipleAnswerKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'statement'
		public Keyword getStatementKeyword_2() { return cStatementKeyword_2; }
		
		//statements=Paragraph
		public Assignment getStatementsAssignment_3() { return cStatementsAssignment_3; }
		
		//Paragraph
		public RuleCall getStatementsParagraphParserRuleCall_3_0() { return cStatementsParagraphParserRuleCall_3_0; }
		
		//('answers' '{' answers+=Multiple ("," answers+=Multiple)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'answers'
		public Keyword getAnswersKeyword_4_0() { return cAnswersKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//answers+=Multiple
		public Assignment getAnswersAssignment_4_2() { return cAnswersAssignment_4_2; }
		
		//Multiple
		public RuleCall getAnswersMultipleParserRuleCall_4_2_0() { return cAnswersMultipleParserRuleCall_4_2_0; }
		
		//("," answers+=Multiple)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//answers+=Multiple
		public Assignment getAnswersAssignment_4_3_1() { return cAnswersAssignment_4_3_1; }
		
		//Multiple
		public RuleCall getAnswersMultipleParserRuleCall_4_3_1_0() { return cAnswersMultipleParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_5_0() { return cCorrectfeedbackKeyword_5_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_5_1() { return cCorrectfeedbackAssignment_5_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_5_1_0() { return cCorrectfeedbackEStringParserRuleCall_5_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_6_0() { return cIncorrectfeedbackKeyword_6_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_6_1() { return cIncorrectfeedbackAssignment_6_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_6_1_0() { return cIncorrectfeedbackEStringParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class FillingAnswerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.FillingAnswer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFillingAnswerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFillingAnswerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCorrectfeedbackKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_3_1_0 = (RuleCall)cCorrectfeedbackAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cIncorrectfeedbackKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_4_1_0 = (RuleCall)cIncorrectfeedbackAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHolesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cHolesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cHolesHoleParserRuleCall_5_2_0 = (RuleCall)cHolesAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cHolesAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cHolesHoleParserRuleCall_5_3_1_0 = (RuleCall)cHolesAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FillingAnswer:
		//	{FillingAnswer}
		//	'FillingAnswer'
		//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? ('holes' '{'
		//	holes+=Hole ("," holes+=Hole)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FillingAnswer} 'FillingAnswer' '{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback'
		//incorrectfeedback=EString)? ('holes' '{' holes+=Hole ("," holes+=Hole)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{FillingAnswer}
		public Action getFillingAnswerAction_0() { return cFillingAnswerAction_0; }
		
		//'FillingAnswer'
		public Keyword getFillingAnswerKeyword_1() { return cFillingAnswerKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_3_0() { return cCorrectfeedbackKeyword_3_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_3_1() { return cCorrectfeedbackAssignment_3_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_3_1_0() { return cCorrectfeedbackEStringParserRuleCall_3_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_4_0() { return cIncorrectfeedbackKeyword_4_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_4_1() { return cIncorrectfeedbackAssignment_4_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_4_1_0() { return cIncorrectfeedbackEStringParserRuleCall_4_1_0; }
		
		//('holes' '{' holes+=Hole ("," holes+=Hole)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'holes'
		public Keyword getHolesKeyword_5_0() { return cHolesKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//holes+=Hole
		public Assignment getHolesAssignment_5_2() { return cHolesAssignment_5_2; }
		
		//Hole
		public RuleCall getHolesHoleParserRuleCall_5_2_0() { return cHolesHoleParserRuleCall_5_2_0; }
		
		//("," holes+=Hole)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//holes+=Hole
		public Assignment getHolesAssignment_5_3_1() { return cHolesAssignment_5_3_1; }
		
		//Hole
		public RuleCall getHolesHoleParserRuleCall_5_3_1_0() { return cHolesHoleParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class TrueOrFalseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.TrueOrFalse");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTrueOrFalseAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTrueOrFalseKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAssertionsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cAssertionsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cAssertionsAssertionParserRuleCall_3_2_0 = (RuleCall)cAssertionsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cAssertionsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cAssertionsAssertionParserRuleCall_3_3_1_0 = (RuleCall)cAssertionsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCorrectfeedbackKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cCorrectfeedbackAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cCorrectfeedbackEStringParserRuleCall_4_1_0 = (RuleCall)cCorrectfeedbackAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIncorrectfeedbackKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIncorrectfeedbackAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cIncorrectfeedbackEStringParserRuleCall_5_1_0 = (RuleCall)cIncorrectfeedbackAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//TrueOrFalse:
		//	{TrueOrFalse}
		//	'TrueOrFalse'
		//	'{' ('assertions' '{' assertions+=Assertion ("," assertions+=Assertion)* '}')? ('correctfeedback'
		//	correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{TrueOrFalse} 'TrueOrFalse' '{' ('assertions' '{' assertions+=Assertion ("," assertions+=Assertion)* '}')?
		//('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{TrueOrFalse}
		public Action getTrueOrFalseAction_0() { return cTrueOrFalseAction_0; }
		
		//'TrueOrFalse'
		public Keyword getTrueOrFalseKeyword_1() { return cTrueOrFalseKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('assertions' '{' assertions+=Assertion ("," assertions+=Assertion)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'assertions'
		public Keyword getAssertionsKeyword_3_0() { return cAssertionsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//assertions+=Assertion
		public Assignment getAssertionsAssignment_3_2() { return cAssertionsAssignment_3_2; }
		
		//Assertion
		public RuleCall getAssertionsAssertionParserRuleCall_3_2_0() { return cAssertionsAssertionParserRuleCall_3_2_0; }
		
		//("," assertions+=Assertion)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//assertions+=Assertion
		public Assignment getAssertionsAssignment_3_3_1() { return cAssertionsAssignment_3_3_1; }
		
		//Assertion
		public RuleCall getAssertionsAssertionParserRuleCall_3_3_1_0() { return cAssertionsAssertionParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('correctfeedback' correctfeedback=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'correctfeedback'
		public Keyword getCorrectfeedbackKeyword_4_0() { return cCorrectfeedbackKeyword_4_0; }
		
		//correctfeedback=EString
		public Assignment getCorrectfeedbackAssignment_4_1() { return cCorrectfeedbackAssignment_4_1; }
		
		//EString
		public RuleCall getCorrectfeedbackEStringParserRuleCall_4_1_0() { return cCorrectfeedbackEStringParserRuleCall_4_1_0; }
		
		//('incorrectfeedback' incorrectfeedback=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'incorrectfeedback'
		public Keyword getIncorrectfeedbackKeyword_5_0() { return cIncorrectfeedbackKeyword_5_0; }
		
		//incorrectfeedback=EString
		public Assignment getIncorrectfeedbackAssignment_5_1() { return cIncorrectfeedbackAssignment_5_1; }
		
		//EString
		public RuleCall getIncorrectfeedbackEStringParserRuleCall_5_1_0() { return cIncorrectfeedbackEStringParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ParagraphElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Paragraph");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParagraphAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTextAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_1_0 = (RuleCall)cTextAssignment_1.eContents().get(0);
		
		//Paragraph:
		//	{Paragraph} text=EString?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Paragraph} text=EString?
		public Group getGroup() { return cGroup; }
		
		//{Paragraph}
		public Action getParagraphAction_0() { return cParagraphAction_0; }
		
		//text=EString?
		public Assignment getTextAssignment_1() { return cTextAssignment_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_1_0() { return cTextEStringParserRuleCall_1_0; }
	}
	public class SingleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Single");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSingleAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTextAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_1_0 = (RuleCall)cTextAssignment_1.eContents().get(0);
		
		//Single:
		//	{Single} text=EString?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Single} text=EString?
		public Group getGroup() { return cGroup; }
		
		//{Single}
		public Action getSingleAction_0() { return cSingleAction_0; }
		
		//text=EString?
		public Assignment getTextAssignment_1() { return cTextAssignment_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_1_0() { return cTextEStringParserRuleCall_1_0; }
	}
	public class MultipleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Multiple");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMultipleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTextAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTextEStringParserRuleCall_2_0_0 = (RuleCall)cTextAssignment_2_0.eContents().get(0);
		private final Keyword cCommaKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEBooleanParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Multiple:
		//	{Multiple}
		//	'{' (text=EString ",")?
		//	value=EBoolean?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Multiple} '{' (text=EString ",")? value=EBoolean? '}'
		public Group getGroup() { return cGroup; }
		
		//{Multiple}
		public Action getMultipleAction_0() { return cMultipleAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(text=EString ",")?
		public Group getGroup_2() { return cGroup_2; }
		
		//text=EString
		public Assignment getTextAssignment_2_0() { return cTextAssignment_2_0; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_2_0_0() { return cTextEStringParserRuleCall_2_0_0; }
		
		//","
		public Keyword getCommaKeyword_2_1() { return cCommaKeyword_2_1; }
		
		//value=EBoolean?
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EBoolean
		public RuleCall getValueEBooleanParserRuleCall_3_0() { return cValueEBooleanParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EBoolean ecore::EBoolean:
		//	'true' | 'false';
		@Override public ParserRule getRule() { return rule; }
		
		//'true' | 'false'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'true'
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }
		
		//'false'
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}
	public class HoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Hole");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cHoleAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cHoleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTextKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTextAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTextEStringParserRuleCall_3_1_0 = (RuleCall)cTextAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeTypeHoleEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Hole:
		//	{Hole}
		//	'Hole'
		//	'{' ('text' text=EString)? ('type' type=TypeHole)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Hole} 'Hole' '{' ('text' text=EString)? ('type' type=TypeHole)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Hole}
		public Action getHoleAction_0() { return cHoleAction_0; }
		
		//'Hole'
		public Keyword getHoleKeyword_1() { return cHoleKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('text' text=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'text'
		public Keyword getTextKeyword_3_0() { return cTextKeyword_3_0; }
		
		//text=EString
		public Assignment getTextAssignment_3_1() { return cTextAssignment_3_1; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_3_1_0() { return cTextEStringParserRuleCall_3_1_0; }
		
		//('type' type=TypeHole)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=TypeHole
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//TypeHole
		public RuleCall getTypeTypeHoleEnumRuleCall_4_1_0() { return cTypeTypeHoleEnumRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AssertionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.Assertion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAssertionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Assignment cTextAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final RuleCall cTextEStringParserRuleCall_2_0_0 = (RuleCall)cTextAssignment_2_0.eContents().get(0);
		private final Keyword cCommaKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEBooleanParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Assertion:
		//	{Assertion}
		//	'{' (text=EString ",")?
		//	value=EBoolean?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Assertion} '{' (text=EString ",")? value=EBoolean? '}'
		public Group getGroup() { return cGroup; }
		
		//{Assertion}
		public Action getAssertionAction_0() { return cAssertionAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//(text=EString ",")?
		public Group getGroup_2() { return cGroup_2; }
		
		//text=EString
		public Assignment getTextAssignment_2_0() { return cTextAssignment_2_0; }
		
		//EString
		public RuleCall getTextEStringParserRuleCall_2_0_0() { return cTextEStringParserRuleCall_2_0_0; }
		
		//","
		public Keyword getCommaKeyword_2_1() { return cCommaKeyword_2_1; }
		
		//value=EBoolean?
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//EBoolean
		public RuleCall getValueEBooleanParserRuleCall_3_0() { return cValueEBooleanParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	public class EvaluationLanguageTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.EvaluationLanguageType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cESEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cESESKeyword_0_0 = (Keyword)cESEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cENEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cENENKeyword_1_0 = (Keyword)cENEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cFREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cFRFRKeyword_2_0 = (Keyword)cFREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGRGRKeyword_3_0 = (Keyword)cGREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cLIEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cLILIKeyword_4_0 = (Keyword)cLIEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum EvaluationLanguageType:
		//	ES | EN | FR | GR | LI;
		public EnumRule getRule() { return rule; }
		
		//ES | EN | FR | GR | LI
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ES
		public EnumLiteralDeclaration getESEnumLiteralDeclaration_0() { return cESEnumLiteralDeclaration_0; }
		
		//'ES'
		public Keyword getESESKeyword_0_0() { return cESESKeyword_0_0; }
		
		//EN
		public EnumLiteralDeclaration getENEnumLiteralDeclaration_1() { return cENEnumLiteralDeclaration_1; }
		
		//'EN'
		public Keyword getENENKeyword_1_0() { return cENENKeyword_1_0; }
		
		//FR
		public EnumLiteralDeclaration getFREnumLiteralDeclaration_2() { return cFREnumLiteralDeclaration_2; }
		
		//'FR'
		public Keyword getFRFRKeyword_2_0() { return cFRFRKeyword_2_0; }
		
		//GR
		public EnumLiteralDeclaration getGREnumLiteralDeclaration_3() { return cGREnumLiteralDeclaration_3; }
		
		//'GR'
		public Keyword getGRGRKeyword_3_0() { return cGRGRKeyword_3_0; }
		
		//LI
		public EnumLiteralDeclaration getLIEnumLiteralDeclaration_4() { return cLIEnumLiteralDeclaration_4; }
		
		//'LI'
		public Keyword getLILIKeyword_4_0() { return cLILIKeyword_4_0; }
	}
	public class TypeHoleElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.TypeHole");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cVisibleEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cVisibleVisibleKeyword_0_0 = (Keyword)cVisibleEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cHoleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cHoleHoleKeyword_1_0 = (Keyword)cHoleEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TypeHole:
		//	visible | hole;
		public EnumRule getRule() { return rule; }
		
		//visible | hole
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//visible
		public EnumLiteralDeclaration getVisibleEnumLiteralDeclaration_0() { return cVisibleEnumLiteralDeclaration_0; }
		
		//'visible'
		public Keyword getVisibleVisibleKeyword_0_0() { return cVisibleVisibleKeyword_0_0; }
		
		//hole
		public EnumLiteralDeclaration getHoleEnumLiteralDeclaration_1() { return cHoleEnumLiteralDeclaration_1; }
		
		//'hole'
		public Keyword getHoleHoleKeyword_1_0() { return cHoleHoleKeyword_1_0; }
	}
	public class TypeGradeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.Upctformaevalua.TypeGrade");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cHighestEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cHighestHighestKeyword_0_0 = (Keyword)cHighestEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cMiddleEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cMiddleMiddleKeyword_1_0 = (Keyword)cMiddleEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLowestEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLowestLowestKeyword_2_0 = (Keyword)cLowestEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TypeGrade:
		//	highest | middle | lowest;
		public EnumRule getRule() { return rule; }
		
		//highest | middle | lowest
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//highest
		public EnumLiteralDeclaration getHighestEnumLiteralDeclaration_0() { return cHighestEnumLiteralDeclaration_0; }
		
		//'highest'
		public Keyword getHighestHighestKeyword_0_0() { return cHighestHighestKeyword_0_0; }
		
		//middle
		public EnumLiteralDeclaration getMiddleEnumLiteralDeclaration_1() { return cMiddleEnumLiteralDeclaration_1; }
		
		//'middle'
		public Keyword getMiddleMiddleKeyword_1_0() { return cMiddleMiddleKeyword_1_0; }
		
		//lowest
		public EnumLiteralDeclaration getLowestEnumLiteralDeclaration_2() { return cLowestEnumLiteralDeclaration_2; }
		
		//'lowest'
		public Keyword getLowestLowestKeyword_2_0() { return cLowestLowestKeyword_2_0; }
	}
	
	private final EvaluationElements pEvaluation;
	private final QualifiedNameElements pQualifiedName;
	private final EvaluationUnitElements pEvaluationUnit;
	private final QuestionElements pQuestion;
	private final EvaluationLanguageTypeElements eEvaluationLanguageType;
	private final EStringElements pEString;
	private final EvaluationUnit_ImplElements pEvaluationUnit_Impl;
	private final Question_ImplElements pQuestion_Impl;
	private final EIntElements pEInt;
	private final TrainingElements pTraining;
	private final FinalElements pFinal;
	private final SingleAnswerElements pSingleAnswer;
	private final MultipleAnswerElements pMultipleAnswer;
	private final FillingAnswerElements pFillingAnswer;
	private final TrueOrFalseElements pTrueOrFalse;
	private final ParagraphElements pParagraph;
	private final SingleElements pSingle;
	private final MultipleElements pMultiple;
	private final EBooleanElements pEBoolean;
	private final HoleElements pHole;
	private final TypeHoleElements eTypeHole;
	private final AssertionElements pAssertion;
	private final TypeGradeElements eTypeGrade;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public UpctformaevaluaGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEvaluation = new EvaluationElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pEvaluationUnit = new EvaluationUnitElements();
		this.pQuestion = new QuestionElements();
		this.eEvaluationLanguageType = new EvaluationLanguageTypeElements();
		this.pEString = new EStringElements();
		this.pEvaluationUnit_Impl = new EvaluationUnit_ImplElements();
		this.pQuestion_Impl = new Question_ImplElements();
		this.pEInt = new EIntElements();
		this.pTraining = new TrainingElements();
		this.pFinal = new FinalElements();
		this.pSingleAnswer = new SingleAnswerElements();
		this.pMultipleAnswer = new MultipleAnswerElements();
		this.pFillingAnswer = new FillingAnswerElements();
		this.pTrueOrFalse = new TrueOrFalseElements();
		this.pParagraph = new ParagraphElements();
		this.pSingle = new SingleElements();
		this.pMultiple = new MultipleElements();
		this.pEBoolean = new EBooleanElements();
		this.pHole = new HoleElements();
		this.eTypeHole = new TypeHoleElements();
		this.pAssertion = new AssertionElements();
		this.eTypeGrade = new TypeGradeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.Upctformaevalua".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Evaluation:
	//	{Evaluation}
	//	'Evaluation'
	//	name=EString
	//	'{' ('package' name=QualifiedName ';')? (units+=EvaluationUnit ("," units+=EvaluationUnit)*)?
	//	'}';
	public EvaluationElements getEvaluationAccess() {
		return pEvaluation;
	}
	
	public ParserRule getEvaluationRule() {
		return getEvaluationAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	//EvaluationUnit:
	//	EvaluationUnit_Impl | Training | Final;
	public EvaluationUnitElements getEvaluationUnitAccess() {
		return pEvaluationUnit;
	}
	
	public ParserRule getEvaluationUnitRule() {
		return getEvaluationUnitAccess().getRule();
	}
	
	//Question:
	//	Question_Impl | SingleAnswer | MultipleAnswer | FillingAnswer | TrueOrFalse;
	public QuestionElements getQuestionAccess() {
		return pQuestion;
	}
	
	public ParserRule getQuestionRule() {
		return getQuestionAccess().getRule();
	}
	
	//enum EvaluationLanguageType:
	//	ES | EN | FR | GR | LI;
	public EvaluationLanguageTypeElements getEvaluationLanguageTypeAccess() {
		return eEvaluationLanguageType;
	}
	
	public EnumRule getEvaluationLanguageTypeRule() {
		return getEvaluationLanguageTypeAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//EvaluationUnit_Impl EvaluationUnit:
	//	{EvaluationUnit}
	//	'EvaluationUnit'
	//	name=EString
	//	language=EvaluationLanguageType
	//	'{' ('numberquestions' numberquestions=EInt)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')?
	//	'}';
	public EvaluationUnit_ImplElements getEvaluationUnit_ImplAccess() {
		return pEvaluationUnit_Impl;
	}
	
	public ParserRule getEvaluationUnit_ImplRule() {
		return getEvaluationUnit_ImplAccess().getRule();
	}
	
	//Question_Impl Question:
	//	{Question}
	//	'Question'
	//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
	//	'}';
	public Question_ImplElements getQuestion_ImplAccess() {
		return pQuestion_Impl;
	}
	
	public ParserRule getQuestion_ImplRule() {
		return getQuestion_ImplAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//Training:
	//	{Training}
	//	'Training'
	//	name=EString
	//	language=EvaluationLanguageType
	//	'{' ('numberquestions' numberquestions=EInt)? ('Attempts' Attempts=EInt)? ('grade' grade=TypeGrade)? ('questions' '{'
	//	questions+=Question ("," questions+=Question)* '}')?
	//	'}';
	public TrainingElements getTrainingAccess() {
		return pTraining;
	}
	
	public ParserRule getTrainingRule() {
		return getTrainingAccess().getRule();
	}
	
	//Final:
	//	{Final}
	//	'Final'
	//	name=EString
	//	language=EvaluationLanguageType
	//	'{' ('numberquestions' numberquestions=EInt)? ('questions' '{' questions+=Question ("," questions+=Question)* '}')?
	//	'}';
	public FinalElements getFinalAccess() {
		return pFinal;
	}
	
	public ParserRule getFinalRule() {
		return getFinalAccess().getRule();
	}
	
	//SingleAnswer:
	//	'SingleAnswer'
	//	'{'
	//	'statement' statements=Paragraph ('answers' '{' answers+=Single ("," answers+=Single)* '}')? ('correct'
	//	correctanswer=EInt)? ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
	//	'}';
	public SingleAnswerElements getSingleAnswerAccess() {
		return pSingleAnswer;
	}
	
	public ParserRule getSingleAnswerRule() {
		return getSingleAnswerAccess().getRule();
	}
	
	//MultipleAnswer:
	//	'MultipleAnswer'
	//	'{'
	//	'statement' statements=Paragraph ('answers' '{' answers+=Multiple ("," answers+=Multiple)* '}')? ('correctfeedback'
	//	correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
	//	'}';
	public MultipleAnswerElements getMultipleAnswerAccess() {
		return pMultipleAnswer;
	}
	
	public ParserRule getMultipleAnswerRule() {
		return getMultipleAnswerAccess().getRule();
	}
	
	//FillingAnswer:
	//	{FillingAnswer}
	//	'FillingAnswer'
	//	'{' ('correctfeedback' correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)? ('holes' '{'
	//	holes+=Hole ("," holes+=Hole)* '}')?
	//	'}';
	public FillingAnswerElements getFillingAnswerAccess() {
		return pFillingAnswer;
	}
	
	public ParserRule getFillingAnswerRule() {
		return getFillingAnswerAccess().getRule();
	}
	
	//TrueOrFalse:
	//	{TrueOrFalse}
	//	'TrueOrFalse'
	//	'{' ('assertions' '{' assertions+=Assertion ("," assertions+=Assertion)* '}')? ('correctfeedback'
	//	correctfeedback=EString)? ('incorrectfeedback' incorrectfeedback=EString)?
	//	'}';
	public TrueOrFalseElements getTrueOrFalseAccess() {
		return pTrueOrFalse;
	}
	
	public ParserRule getTrueOrFalseRule() {
		return getTrueOrFalseAccess().getRule();
	}
	
	//Paragraph:
	//	{Paragraph} text=EString?;
	public ParagraphElements getParagraphAccess() {
		return pParagraph;
	}
	
	public ParserRule getParagraphRule() {
		return getParagraphAccess().getRule();
	}
	
	//Single:
	//	{Single} text=EString?;
	public SingleElements getSingleAccess() {
		return pSingle;
	}
	
	public ParserRule getSingleRule() {
		return getSingleAccess().getRule();
	}
	
	//Multiple:
	//	{Multiple}
	//	'{' (text=EString ",")?
	//	value=EBoolean?
	//	'}';
	public MultipleElements getMultipleAccess() {
		return pMultiple;
	}
	
	public ParserRule getMultipleRule() {
		return getMultipleAccess().getRule();
	}
	
	//EBoolean ecore::EBoolean:
	//	'true' | 'false';
	public EBooleanElements getEBooleanAccess() {
		return pEBoolean;
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}
	
	//Hole:
	//	{Hole}
	//	'Hole'
	//	'{' ('text' text=EString)? ('type' type=TypeHole)?
	//	'}';
	public HoleElements getHoleAccess() {
		return pHole;
	}
	
	public ParserRule getHoleRule() {
		return getHoleAccess().getRule();
	}
	
	//enum TypeHole:
	//	visible | hole;
	public TypeHoleElements getTypeHoleAccess() {
		return eTypeHole;
	}
	
	public EnumRule getTypeHoleRule() {
		return getTypeHoleAccess().getRule();
	}
	
	//Assertion:
	//	{Assertion}
	//	'{' (text=EString ",")?
	//	value=EBoolean?
	//	'}';
	public AssertionElements getAssertionAccess() {
		return pAssertion;
	}
	
	public ParserRule getAssertionRule() {
		return getAssertionAccess().getRule();
	}
	
	//enum TypeGrade:
	//	highest | middle | lowest;
	public TypeGradeElements getTypeGradeAccess() {
		return eTypeGrade;
	}
	
	public EnumRule getTypeGradeRule() {
		return getTypeGradeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
