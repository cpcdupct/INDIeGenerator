/*
 * generated by Xtext 2.12.0
 */
package org.xtext.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import upctforma.ContentUnit
import upctforma.PlaceHolder
import upctforma.WidgetType
import upctforma.Section
import upctforma.Row
import upctforma.Column
import upctforma.SimpleElement
import upctforma.Widget
import upctforma.ContentElement
import upctforma.Text
import upctforma.Number
import upctforma.Image
import upctforma.Video
import upctforma.ListValue
import upctforma.RecordValue
import java.util.List
import java.util.ArrayList
import java.util.HashMap;
import java.util.Map;
/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class UpctformaGenerator extends AbstractGenerator {	
	/* Variable global que almacena los objetivos a superar en una unidad */
	var String progresoobj = '';
	
	
	/*Variable global que almacena el contenido del fichero index.php a generar */
	var List<String> language;
	
	/* 	'EN' -> #["Match each image with its text","Click on the schema","Click on the correct option","Click on the images","Click on the term","Answer each question","Match each concept with its definition","Click on the button","Click on each tab","Click on the image"], 
		'ES' -> #["Match each image with its text","Click on the schema","Click on the correct option","Click on the images","Click on the term","Answer each question","Match each concept with its definition","Click on the button","Click on each tab","Click on the image"]
	);*/
	
	var String fileindex = ''; 
	var String filetextual = ''; 
	var String filevideo1 = '';	
	var String filevideo2 = '';
	var String filevideo3 = '';
	var String filetruefalse = '';
	var String fileanimation = '';
	var String fileanimationcss = '';
	var String filetest = '';
	var String fileImageSound = '';
	var String fileSchema = '';
	var String filecouples = '';
		
	var Integer containsRectangleDragAndDrop = 0;
	var	Integer	containsTextualDragAndDrop = 0;
	var Integer containsContainerTest = 0;
	var Integer containsTrueFalse = 0;  
	
	var primervideo = 0;
	var AnimationInOut animation = null;
	var TextualDragAndDrop textualdraganddrop = null;

	/**
	 * Recuperamos todas las metaclases y nos quedamos con las ContentUnit.
	 * Por cada ContentUnit llamamos al método compile. 
	 */
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for (e : resource.allContents.toIterable.filter(ContentUnit)){
			compile(e,fsa)
		}
	}
	
	def generateTrueFalse(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(10)» </h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
		'''
		
		var ListValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as ListValue;	
		}else{
			val arge = args.get(j) as Widget;				
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}
		
		filetruefalse = filetruefalse + '''var solution«idgen» = ['''
		
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Text;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as Text;
		
		
			fileindex = fileindex + '''		
	    	    <div class="row padtf" style="background-color: rgba(75, 187, 139, 0.5);">
			    	<div class="col-md-7 col-sm-9 col-xs-9" >
			        	<p class="marzero">«tempwg3.html»</p>
			        </div>                            
			        <div class="col-md-4 col-sm-2 col-xs-2 centered">
			     	     <input name="«idgen»«i»" type="checkbox" class="switched" checked data-toggle="toggle" data-on="True" data-off="False" data-onstyle="success" data-offstyle="danger">  
			     	</div>
			     	<div class="col-md-1 col-sm-1 col-xs-1 iconresult centered"></div>
				</div>
			'''
			filetruefalse = filetruefalse + '''«tempwg4.html.toLowerCase»'''if (i !=(tempwg1.listvalues.length-1)){filetruefalse = filetruefalse + ''','''}
		}
		
		filetruefalse = filetruefalse + '''];
		'''
		
		fileindex = fileindex + '''
			<div class="row" style="margin-bottom: 80px;">
				<div class="col-md-3 col-sm-6 col-xs-6">
			    	<a class="btn btn-lg btn-success boton_truefalse«idgen»">«language.get(11)»</a>
			    </div>
			    <div class="col-md-9 col-sm-6 col-xs-6 resultado_truefalse«idgen»"></div>
			</div>
		'''
		
		filetruefalse = filetruefalse + '''
			var victoria«idgen» = 0;
			
			$('.boton_truefalse«idgen»').click(function(ev) {
			    var cont«idgen» = 0;
			    var res«idgen» = [];
			
			    for (var i = 0; i < solution«idgen».length; i++) {
			        res«idgen»[i] = $('input:checkbox[name=«idgen»' + i + ']').prop('checked');
			        if (solution«idgen»[i] == res«idgen»[i]) {
			        	$('input:checkbox[name=«idgen»' + i + ']').parent().parent().siblings('.iconresult').html('<i class="fas fa-2x fa-check"></i>');
			            cont«idgen»++;
			        }else{
			        	 $('input:checkbox[name=«idgen»' + i + ']').parent().parent().siblings('.iconresult').html('<i class="fas fa-2x fa-times"></i>');
			        }
			    }
			
			    if(cont«idgen» == solution«idgen».length){
			        victoria«idgen» = 1;
			        setObjetivoCompleto("objetivo«idgen»","«wg.name»","«wg.name»");				        
			    }
			
			    $('.resultado_truefalse«idgen»').html('<h4>' + cont«idgen» + ' «language.get(12)»</h4>');
			});
		'''
		
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''		
	}
	def generateCouples(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		
		var ListValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as ListValue;	
		}else{
			val arge = args.get(j) as Widget;				
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}
			
		
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(0)» </h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
		'''
		
		filecouples = filecouples + '''
			var data_couples«idgen» = {
		    	0: {
		    			imagenes: [],
		    			textos: []
		    	}
		    }
		    var indexes«idgen» = [];		    
		'''
		var cont = 0;
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Text;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as Image;
			
			filecouples = filecouples + '''
				 data_couples«idgen»[0].imagenes[«i»] = {content: '«tempwg4.url»', tipo: '1', pareja: '«i»'};
				 data_couples«idgen»[0].textos[«i»] = {content: '«tempwg3.html»', tipo: '2', pareja: '«i»'};
				 indexes«idgen»[«cont»] = '«cont»';				 				 
			'''
			cont++;
			filecouples = filecouples + '''
				indexes«idgen»[«cont»] = '«cont»';
			'''
			cont++;
		}
		filecouples = filecouples + '''
			function llamarancla(){
				$('html, body').animate({
					scrollTop: 0
				}, 1000);
			}
						
			var actual, last;
			var countAciertos«idgen» = 0;
			$(document).ready(function () {
			    $('.parejas«idgen»').each(function () {
			        var dataindex = $(this).attr('data-index');
			        var initialArray = data_couples«idgen»[dataindex].imagenes.concat(data_couples«idgen»[dataindex].textos);
			        
			        var shuffledArray = shuffle(initialArray, indexes«idgen»);
	                $(this).append($('<div />').addClass('row').append($('<div />').addClass('col-xs-12 col-sm-12 col-md-12 inicio«idgen»')).append($('<div />')));

	                var countrow = 1, countcol = 1;
	                $.each(shuffledArray, function (key, value) {
	                    if (countcol == 1) {
	                        $('.inicio«idgen»').append($('<div />').addClass('col-xs-12 col-sm-12 col-md-12 row«idgen»'+ countrow));
	                    }
	                    if (value.tipo == 1) {
	                        $('.row«idgen»'+ countrow).append($('<div />').addClass('col-xs-3 col-sm-3 col-md-3 col«idgen»').attr('data-id', '«idgen»/' + indexes«idgen»[key]).attr('data-position', '«idgen»/' + value.pareja).append($('<img />').addClass('img-responsive').attr('src', value.content)));
	                    } else {
	                        $('.row«idgen»'+ countrow).append($('<div />').addClass('col-xs-3 col-sm-3 col-md-3 col«idgen»').attr('data-id', '«idgen»/' + indexes«idgen»[key]).attr('data-position', '«idgen»/' + value.pareja).append($('<button />').text(value.content)));
	                    }
	                    countcol++;
	                    if (countcol > 4) {
	                        countcol = 1;
	                        countrow++;
	                    }
	                });
	            });
	               $('div[class*="row«idgen»"]:not(.row) > div[class*="col«idgen»"]').on('click', function () {
	                    actual = $(this).attr('data-position');
	                    actual2 = $(this).attr('data-id');
	                    if (typeof (last) === 'undefined') {
	                        $(this).addClass('activo');
	                        last = $(this).attr('data-position');
	                        last2 = $(this).attr('data-id');
	                        actual = undefined;
	                        actual2 = undefined;
	                    } else {
	                        actual = $(this).attr('data-position');
	                        actual2 = $(this).attr('data-id');
	                        if (actual == last) {
	                            $('div[data-position="' + actual + '"]').unbind('click').addClass('correcto');
	                            $('div[data-position="' + last + '"]').unbind('click').addClass('correcto');
	                            countAciertos«idgen» = countAciertos«idgen» + 2;
	                        } else {
	                            $('div[data-id="' + actual2 + '"]').addClass('fallo');
	                            $('div[data-id="' + last2 + '"]').addClass('fallo');
	                            setTimeout(function() {
	                                $('.fallo').removeClass('fallo');
	                            }, 300);
	                        }
	                        $('.activo').removeClass('activo');
	                        setTimeout(function() {
	                            last = undefined;
	                            actual = undefined;
	                        }, 300);
	                        if (countAciertos«idgen» === indexes«idgen».length) {
	                            setObjetivoCompleto('objetivo«idgen»','«wg.name»','«wg.name»');		
	                        }
	                    }
	                });
	            });
	            
	            
		'''
		
		fileindex = fileindex + '''
			<div class="row" style="margin-bottom: 80px;">
			    <div class="col-md-12 centered">			    	
			    	<div class="container parejas«idgen»" data-index="0"></div>
				</div>
			</div>
		'''
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''			
	}
	
	def generateSchema(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		var ListValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as ListValue;	
		}else{
			val arge = args.get(j) as Widget;				
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}
			
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(1)» </h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
		'''
		
		val tempwg2 = tempwg1.listvalues.get(0) as Image;			
		fileindex = fileindex + '''
			<div class="row" style="margin-bottom: 80px;">
	            <div class="col-md-12 centered">                       
    	            <p class="centered"><img class="img-responsive empezar«idgen» mano" data-obj="objetivo«idgen»" data-type="ClickImage" data-desc="ClickImage" src="«tempwg2.url»" alt="diagrama 1"></p> 
                </div>
            </div>
        '''
        fileSchema = fileSchema + '''
	        var bloqueado«idgen» = false;
	        $(document).on('click', '.empezar«idgen»', function(){	
	        	var objetivo = $(this).attr('data-obj');
	        	var descripcion = $(this).attr('data-desc');
	        	var tipo = $(this).attr('data-type');
	        
	        	var orden = [
        '''
		
		for (var i = 1; i < tempwg1.listvalues.length; i++){
			val tempwg3 = tempwg1.listvalues.get(i) as Image;
			 fileSchema = fileSchema + '''"«tempwg3.url»"'''if (i !=(tempwg1.listvalues.length-1)){fileSchema = fileSchema + ''','''}			
		}
		fileSchema = fileSchema + '''
			];
					
			if (bloqueado«idgen» == false) {
				bloqueado«idgen» = true;
					var i = 0;
					var timer = setInterval(function(){
					if (i < orden.length) {
						$('.empezar«idgen»').attr('src',orden[i]);
						i++;
					} else {
						clearInterval(timer);
						setObjetivoCompleto("objetivo«idgen»", "«wg.name»", "«wg.name»");
					}		
				}, 1000);
			}	
		});
		'''
		
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''	
	}

	def generateChooseOption(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		var RecordValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as RecordValue;	
		}else{
			val arge = args.get(j) as Widget;				
			tempwg1= arge.widgetelements.get(0) as RecordValue;
		}
		
		val tempwg2= tempwg1.recordvalues.get(0).fieldvalue as Text;
		val tempwg3= tempwg1.recordvalues.get(1).fieldvalue as Image;
		val tempwg4= tempwg1.recordvalues.get(2).fieldvalue as Text;
		val tempwg5= tempwg1.recordvalues.get(3).fieldvalue as Text;
		val tempwg6= tempwg1.recordvalues.get(4).fieldvalue as Text;
		val tempwg7= tempwg1.recordvalues.get(5).fieldvalue as Text;
		val tempwg8= tempwg1.recordvalues.get(6).fieldvalue as Number;
		
		
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(2)»</h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
		'''
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
					<div id="«idgen»" class="pictograma" data-desc="«wg.name»" data-obj="objetivo«idgen»" data-value="«tempwg8.num»">
						<div class="containerpregunta">
							<div class="no-padding">
								<h4 class="text-center">«tempwg2.html»</h4>
							</div>
							<div class="no-padding">
								<figure data-question="«idgen»"><img src="«tempwg3.url»" alt="Imagen 1" class="img-responsive"></figure>
							</div>
							<div class="no-padding" >
								<div class="col-md-6 col-sm-6 col-xs-6 no-padding respuesta" >
									<a class="btn btn-lg btn-success response w98m1" data-response="1" data-question="«idgen»">«tempwg4.html»</a>
								</div>
								<div class="col-md-6 col-sm-6 col-xs-6 no-padding respuesta">
									<a class="btn btn-lg btn-success response w98m1" data-response="2" data-question="«idgen»">«tempwg5.html»</a>
								</div>
								<div class="col-md-6 col-sm-6 col-xs-6 no-padding respuesta">
									<a class="btn btn-lg btn-success response w98m1" data-response="3" data-question="«idgen»">«tempwg6.html»</a>
								</div>
								<div class="col-md-6 col-sm-6 col-xs-6 no-padding respuesta">
									<a class="btn btn-lg btn-success response w98m1" data-response="4" data-question="«idgen»" >«tempwg7.html»</a>
								</div>
							</div>
						</div>
						<div class="hidden-xs col-md-3"></div>
					</div>
				</div>
			</div>
		'''
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''	
	}

	def generateImageSound(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		var ListValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as ListValue;	
		}else{
			val arge = args.get(j) as Widget;				
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}

		fileImageSound = fileImageSound +'''
			var imageSound«idgen» = [];
			var contador«idgen» = 0;		
		'''
				
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(3)»  </h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
		'''
		fileindex = fileindex + '''
			<div class="row" style="margin-bottom: 80px;">           
		'''
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Text;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as Image;
			val tempwg5 = tempwg2.recordvalues.get(2).fieldvalue as Text;
		

			fileImageSound = fileImageSound +'''
				imageSound«idgen»[«i»]=false;
			'''			
			fileindex = fileindex + '''
				<div class="centered">
			    	<div class="ContenedorGeneral ImageSoundTransicion">
			        	<img id="«idgen»«i»" class="mano img-responsive vocabulary«idgen»" src="«tempwg4.url»" data-value="«i»" data-sound="audio«idgen»«i»" data-text="text«idgen»«i»" alt="">
			            <audio id="audio«idgen»«i»" src="«tempwg3.html»" type="audio/mp3"></audio>
			            <div id="text«idgen»«i»" class="Contenido3">
			            	<h3 style="padding-top: 20%;">«tempwg5.html»</h3>
			            </div>
			        </div>
			    </div>
			'''
			
			
		}
		fileindex = fileindex + '''
			</div>           
		'''
		fileImageSound = fileImageSound +'''
			$(document).on('click', '.vocabulary«idgen»', function(){
				var track = $(this).attr('data-sound');
				var pos = $(this).attr('data-value');
				var text = $(this).attr('data-text');
				$('#' + text).addClass("ImageSoundTransicionActive");
				
				imageSound«idgen»[pos] = true;
				
				$('audio').trigger('pause');
				$('audio').prop("currentTime", 0);
				$('#' + track).trigger('play');
				
				contador«idgen» = 0;
				for (i = 0; i < imageSound«idgen».length; i++) {
					if(imageSound«idgen»[i] == true){
						contador«idgen»++;
					}
				}
				if (imageSound«idgen».length ==contador«idgen»){
					setObjetivoCompleto("objetivo«idgen»","«wg.name»","«wg.name»");			
				}
				$(document).on('click', '#'+text, function(){
				    $('audio').trigger('pause');
				    $('audio').prop("currentTime", 0);
				    $('#' + track).trigger('play');
				  });	
			});			
		'''
		
		progresoobj = progresoobj + '''
				,"objetivo«idgen»"
		'''
	}	
	def generateAudioTerm(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		var ListValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as ListValue;	
		}else{
			val arge = args.get(j) as Widget;				
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Text;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as Text;
			val tempwg5 = tempwg2.recordvalues.get(2).fieldvalue as Text;
		
			fileindex = fileindex + '''	
				<div class="row">
					<div class="col-md-12 interview">
			'''
			if (i==0){fileindex = fileindex + '''<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(4)» </h4>'''}
			fileindex = fileindex + '''									
						<i id="objetivo«idgen»«i»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
					</div>
				</div>
			'''		
			fileindex = fileindex + '''
				<div class="row">
					<div class="col-md-3 col-sm-3 col-xs-3">
						<audio id="audio«idgen»«i»">
	  						<source src="«tempwg3.html»" type="audio/mpeg" />
						</audio>
	  					<p id="«idgen»«i»" data-desc="«wg.name»" class="termino btnmostrar mano control_objetivo_unico_click" data-audio="audio«idgen»«i»" data-target="#term«idgen»«i»" data-type="ShowTextAudio">«tempwg4.html»</p>
					</div>
					<div id="term«idgen»«i»" class="col-md-9 col-sm-9 col-xs-9 hidden definicion_termino">
	  					<p>«tempwg5.html»</p>
					</div>
				</div>				
			'''
			
			progresoobj = progresoobj + '''
				,"objetivo«idgen»«i»"
			'''
		}
	}

	def generateContainerTest(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		filetest = filetest +'''
			var solution«idgen» = 'true';
			var res«idgen» = [];
			var victoria«idgen» = 0;
			var contador«idgen»;
			
			$('#buttontest«idgen»').click(function(ev) {
				contador«idgen» = 0;
			
		'''
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(5)» </h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
		'''
		fileindex = fileindex + '''
			<div class="row">            
		'''
					
		var ListValue tempwg1;
		if (tipo == 1){
			tempwg1= wg.widgetelements.get(0) as ListValue;
		}else{
			val arge = args.get(j) as Widget;			
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}	
		
		fileindex = fileindex + '''         				
	    	<div class="row padtf">
	    '''
	    
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Text;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as ListValue;
			val tempwg5 = tempwg2.recordvalues.get(2).fieldvalue as Number;
			
			val question = tempwg3.html.replace('[blank]', '____');
			
			filetest = filetest +'''
				if( solution«idgen» == $('input:radio[name=«idgen»«i»]:checked').val() ){res«idgen»[«i»]=true;'''
				
			fileindex = fileindex + '''         					                   
	                            <div class="col-md-4 col-sm-6 col-xs-12">
	                                <p>«question»</p>
	        '''
	        for (var x = 0; x < tempwg4.listvalues.length; x++){
				val response = tempwg4.listvalues.get(x) as Text;
				fileindex = fileindex + '''
				        	<p class="marzero"><label class="labeltest"><input class="events" type="radio" id="«idgen»«i»«x»" data-desc="objetivo«idgen»" name="«idgen»«i»" value="'''if (tempwg5.num == (x+1)){fileindex = fileindex +'''true''' filetest = filetest + '''$("#«idgen»«i»«x»").parent().addClass("verdetest");}'''}else{fileindex = fileindex +'''false'''}fileindex = fileindex +'''">
				                            «response.html»
				            </label></p>
				'''
			}
	        fileindex = fileindex + '''
	                            </div>
	                       
			'''         
			/*for (var x = 0; x < tempwg4.listvalues.length; x++){
				val response = tempwg4.listvalues.get(x) as Text;
				fileindex = fileindex + '''
					<div class="row padtf">
				    	<div class="col-md-12 col-sm-12 col-xs-12">
				        	<input class="events" type="radio" id="«idgen»«i»«x»" data-desc="objetivo«idgen»" name="«idgen»«i»" value="'''if (tempwg5.num == (x+1)){fileindex = fileindex +'''true''' filetest = filetest + '''$("#«idgen»«i»«x»").parent().addClass("verdetest");}'''}else{fileindex = fileindex +'''false'''}fileindex = fileindex +'''">
				                            «response.html»
				        </div>
				   </div>
				'''
			}   */   
			       
		}
		fileindex = fileindex + '''
		 	</div>
		   </div>
		'''         
		
		fileindex = fileindex + '''
		 	<div class="row" style="margin-bottom: 80px;">
		    	<div class="col-md-3 col-sm-6 col-xs-6">
		        	<a id="buttontest«idgen»" class="btn btn-lg btn-success events">«language.get(11)»</a>
		        </div>
		        <div class="col-md-9 col-sm-6 col-xs-6 hidden resultado resultado«idgen»">
		        	<h4>Number of correct answers <span id="«idgen»" class="contador«idgen»"></span></h4>
		        </div>
		    </div>
		'''
		filetest = filetest +'''
			for (i = 0; i < res«idgen».length; i++) {
				if(res«idgen»[i] == true){
					contador«idgen»++;
				}
			}
			$('.contador«idgen»').html(contador«idgen»);
			$('.resultado«idgen»').removeClass('hidden');
				
			if (res«idgen».length ==contador«idgen»){
				setObjetivoCompleto("objetivo«idgen»","«wg.name»","«wg.name»");			
			}		
			});
		'''
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''		
	}
		
	def generateDragAndDropIndex(Widget wg, String idgen, String title, List<ContentElement> args, int j, Integer tipo){
		
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(6)»</h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
		'''
		var ListValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as ListValue;
		}else{
			val arge = args.get(j) as Widget;			
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Image;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as Image;
			
			val tempwg31 = tempwg3.url.split('\\.').get(0);
		
		 		fileindex = fileindex + '''
					<div class="row">
						<div class="col-md-3 col-sm-3 col-xs-3">
					    	<div id="drop«idgen»«i»«i»" class="ui-droppable drops drop«idgen»«i» smar1 ui-helper-reset">
					        	<img src="«tempwg3.url»" id="«idgen»«tempwg31»" class="img img-responsive ui-widget-content ui-draggable">
					        </div>
						</div>
						<div class="col-md-3 col-sm-3 col-xs-3">
							<div id="drop«idgen»«i»" class="smar1 ui-droppable ui-widget-content drops drop«idgen»«i»"></div>
						</div>
						<div class="col-md-6 col-sm-6 col-xs-6">
							<img src="«tempwg4.url»" class="img img-responsive textdrag">
						</div>
					</div>
				'''
		
		}
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-3 col-sm-6 col-xs-6">
					<a class="btn btn-lg btn-success boton_quiz«idgen»">«language.get(11)»</a>
				</div>
				<div class="col-md-9 col-sm-6 col-xs-6 resultado"></div>
			</div>		
		'''		
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''

	}

	def generateDragAndDropJS(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		var dandjs = '';
		dandjs = dandjs + '''
			var ident«idgen»;
			var ident2«idgen»;
			$(function() {    
			    $(".row").on("drag",function(e){
			        ident«idgen» =e.target.id;
			        ident2«idgen» =e.target.src;
			    });
		'''
		var ListValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as ListValue;
		}else{
			val arge = args.get(j) as Widget;			
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Image;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as Image;
			val tempwg5 = tempwg2.recordvalues.get(2).fieldvalue as Image;
			
			val tempwg31 = tempwg3.url.split('\\.').get(0);
			val tempwg51 = tempwg5.url.split('\\.').get(0);
			
			dandjs = dandjs + '''
				$( "#«idgen»«tempwg31»" ).draggable(
					{revert: "invalid"}
				);
				$( ".drop«idgen»«i»" ).droppable({	
					activeClass: "ui-state-hover",
					hoverClass: "ui-state-active",
					drop: function( event, ui ) {
						accion(this,ident«idgen»,ident2«idgen»);
						var cadevento = '{ "draganddrop" : [';
						if (($("#drop«idgen»«i»").children().first()).attr("id") != "«idgen»«tempwg51»") {
							cadevento = cadevento + '{ "Question" : "«idgen»«tempwg51»" , "Response" :"' + ($("#drop«idgen»«i»").children().first()).attr("id") + '", "Solution" : "Incorrect"}';	
						}else{
							cadevento = cadevento + '{ "Question" : "«idgen»«tempwg51»" , "Response" :"' + ($("#drop«idgen»«i»").children().first()).attr("id") + '", "Solution" : "Correct"}';	
						}
						cadevento = cadevento + ']}';
						setObjetivoInteraccionMovimiento("objetivo«idgen»","«wg.name»",cadevento);
					}
				});
				
				
			'''
	
		}
		dandjs = dandjs + '''
			});	
			$('.boton_quiz«idgen»').click(function(ev) {
				ev.preventDefault();
			    var resultado«idgen» = 0;
			   
			   
		''' 
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Image;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as Image;
			val tempwg5 = tempwg2.recordvalues.get(2).fieldvalue as Image;
				
			
			val tempwg51 = tempwg5.url.split('\\.').get(0);
			
			dandjs = dandjs + '''				
				if (($("#drop«idgen»«i»").children().first()).attr("id") == "«idgen»«tempwg51»") {
			'''

		}
		dandjs = dandjs + '''
			resultado«idgen» = 1;
		'''
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			dandjs = dandjs + '''}'''
		}
		dandjs = dandjs + '''			
		if (resultado«idgen» == 1) {
			setObjetivoCompleto("objetivo«idgen»","«wg.name»","RectangleDragAndDrop");
			$('.resultado').html('');
			$('.resultado').append('<h4>Correct</h4>');
		'''
		for (var i = 0; i < tempwg1.listvalues.length; i++){	
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Image;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as Image;
			val tempwg5 = tempwg2.recordvalues.get(2).fieldvalue as Image;

			val tempwg51 = tempwg5.url.split('\\.').get(0);
							
			dandjs = dandjs + '''
				$("#drop«idgen»«i»").empty();
				$("#drop«idgen»«i»").prepend('<img src="«tempwg5.url»" id="«idgen»«tempwg51»" class="img img-responsive ui-widget-content" style="position: relative; margin-top: 0px;">');
			'''
		}	
		dandjs = dandjs + '''			
		} 
		else {
			var cadevento = '{ "draganddrop" : [';
		'''
		for (var i = 0; i < tempwg1.listvalues.length; i++){	
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Image;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as Image;
			val tempwg5 = tempwg2.recordvalues.get(2).fieldvalue as Image;

			val tempwg51 = tempwg5.url.split('\\.').get(0);
					
			if (i!=0){
				dandjs = dandjs + '''cadevento = cadevento + ","
				'''
				
			}
			dandjs = dandjs + '''
				if (($("#drop«idgen»«i»").children().first()).attr("id") != "«idgen»«tempwg51»") {
					cadevento = cadevento + '{ "Question" : "«idgen»«tempwg51»" , "Response" :"' + ($("#drop«idgen»«i»").children().first()).attr("id") + '", "Solution" : "Incorrect"}';								
					if (($("#drop«idgen»«i»").children().first()).attr("id") != undefined){
						$(primeraLibre()).prepend('<img src="'+($("#drop«idgen»«i»").children().first()).attr("src")+'" id="'+($("#drop«idgen»«i»").children().first()).attr("id")+'" class="img img-responsive ui-widget-content ui-draggable" style="position: relative; margin-top: 0px;">');
						$( "#"+($("#drop«idgen»«i»").children().first()).attr("id")+"" ).draggable({revert: "invalid"});
					}
					$("#drop«idgen»«i»").empty();
				}else{
					cadevento = cadevento + '{ "Question" : "«idgen»«tempwg51»" , "Response" :"' + ($("#drop«idgen»«i»").children().first()).attr("id") + '", "Solution" : "Correct"}';								
					$("#drop«idgen»«i»").empty();
					$("#drop«idgen»«i»").prepend('<img src="«tempwg5.url»" id="«idgen»«tempwg51»" class="img img-responsive ui-widget-content" style="position: relative; margin-top: 0px;">');
				}					
			'''
		}
		dandjs = dandjs + '''
				cadevento = cadevento + ']}';
				setObjetivoInteraccion("objetivo«idgen»","«wg.name»",cadevento);
				$('.resultado').html('');
		        $('.resultado').append('<h4>Incorrect</h4>');
				}
			});			
			
			function accion (dropp,identidad,identidad2){
				if(($(dropp).children().first()).attr("id")== undefined){
					$("#"+identidad+"").remove();
					$( dropp ).html( '<img src="'+identidad2+'" id="'+identidad+'" class="img img-responsive ui-widget-content ui-draggable" style="position: relative; margin-top: 0px;">' );
					$("#"+identidad+"").draggable(
						{revert: "invalid"}
					);
				}else{
					$("#"+identidad+"").draggable(
						{revert: "valid"}
					);
				}
			}
			function primeraLibre(cimg){
		'''
		for (var i = 0; i < tempwg1.listvalues.length; i++){	
			dandjs = dandjs + '''
				if (!$.trim($("#drop«idgen»«i»«i»").html()).length) {
						return "#drop«idgen»«i»«i»";							
			'''
			if (i!=tempwg1.listvalues.length){
				dandjs = dandjs + '''}else{'''
			}
		}
		for (var i = 0; i < tempwg1.listvalues.length; i++){	
			dandjs = dandjs + '''}'''
		}					
		dandjs = dandjs + '''							
			}
		'''		
		fsa.generateFile("draganddrop.js",dandjs) 		
	}
		
	def generateDragAndDrop(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		generateDragAndDropIndex(wg, idgen, title,args,j, tipo);
		generateDragAndDropJS(wg, idgen, title,args,j,fsa, tipo);
		
	}
	

	def generateModalButton(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(7)» </h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
		'''
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''
		
		var RecordValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as RecordValue;
		}else{
			val arge = args.get(j) as Widget;			
			tempwg1= arge.widgetelements.get(0) as RecordValue;
		}
		
		val tempwg2 = tempwg1.recordvalues.get(0).fieldvalue as Text;
		val tempwg3 = tempwg1.recordvalues.get(1).fieldvalue as ListValue;
				
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 col-sm-12 col-xs-12 centered">
					<a class="btn btn-lg btn-success control_objetivo_unico_click" data-type="modal" data-desc="Open 'modal«idgen»'" id="«idgen»" data-target="#modal«idgen»" href="#modal«idgen»" data-toggle="modal">«tempwg2.html»</a>
				</div>
			</div>
		'''
		
		fileindex = fileindex + '''
			<div class="modal fade" id="modal«idgen»" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    			<div class="modal-dialog">
      				<div class="modal-content">
        				<div class="modal-header">
          					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          					<h4 class="modal-title">«tempwg2.html»</h4>
        				</div>
        				<div class="modal-body table-responsive" style="max-height:600px; overflow: auto;">
		'''        				
		
		for (var x = 0; x < tempwg3.listvalues.length; x++){			
				val tempwg41 = tempwg3.listvalues.get(x) as ContentElement;
				var secIdi = idgen + "e" + x.toString();
				processElement(args,(j+x),tempwg41,secIdi,title, fsa);				
		}
		fileindex = fileindex + '''					
			        	</div>
			        <div class="modal-footer">
			          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
			        </div>
			      </div>
			    </div>
			  </div>
		'''		
	}
	
	/**
	 * Método encargado de agregar el código para el widget HorizontalTabs.
	 * 
	 * @param wg Widget
	 * @param idgen Identificador único
	 *  
	 */
	def generateHorizontalTabs(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){
		
		
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(8)»</h4>
		'''
		var ListValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as ListValue;
		}else{
			val arge = args.get(j) as Widget;			
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}
		for (var i = 0; i < tempwg1.listvalues.length; i++){		
			if (i != 0){
				fileindex = fileindex + '''
					<i id="objetivo«idgen»«i»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				'''
				progresoobj = progresoobj + '''
					,"objetivo«idgen»«i»"
				'''
			}
		}
		 	
		fileindex = fileindex + '''			
				</div>
			</div>
		'''
		
		fileindex = fileindex + '''
			<div role="tabpanel"> 
	            <ul class="nav nav-tabs" role="tablist">
	    '''
	    
	    for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Text;
			
			fileindex = fileindex + '''
           		<li role="presentation" id="«idgen»«i»" data-type="HorizontalTabs" data-desc="«idgen»«i»" class="'''if (i==0){fileindex = fileindex + '''active'''} else {fileindex = fileindex + '''control_objetivo_unico_click'''} fileindex = fileindex + '''"><a class="events" href="#pes«idgen»«i»" aria-controls="pes«idgen»«i»" role="tab" data-toggle="tab">'''
           		var secIdi = idgen + "e" + i.toString();
				processElement(args,(i+j),tempwg3,secIdi,title, fsa);
			fileindex = fileindex + '''
				</a></li>
			'''
		} 				
		fileindex = fileindex + '''
			</ul>
		    <div class="tab-content">
		'''
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as ListValue;
			
			fileindex = fileindex + '''
				<div role="tabpanel" class="col-md-12 tab-pane'''if (i==0){fileindex = fileindex + ''' active'''} fileindex = fileindex + '''" id="pes«idgen»«i»">
			'''
		
			for (var x = 0; x < tempwg4.listvalues.length; x++){
				val tempwg41 = tempwg4.listvalues.get(x) as ContentElement;
				var secIdi = idgen + "e" + i.toString() + "e" + x.toString();
				processElement(args,(i+j+x),tempwg41,secIdi,title, fsa);				
			}
			fileindex = fileindex + '''					
				</div>
			'''
		}		        
		fileindex = fileindex + '''
				</div>
			</div>
		'''
	}
		 
	/**
	 * Método encargado de agregar el código para el widget VerticalAccordion.
	 * 
	 * @param wg Widget
	 * @param idgen Identificador único
	 *  
	 */
	def generateVerticalAccordion(Widget wg, String idgen, String title, List<ContentElement> args, int j, IFileSystemAccess2 fsa, Integer tipo){

		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(8)»</h4>
		'''
		var ListValue tempwg1;
		if (tipo==1){
			tempwg1= wg.widgetelements.get(0) as ListValue;
		}else{
			val arge = args.get(j) as Widget;			
			tempwg1= arge.widgetelements.get(0) as ListValue;
		}
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Text;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as ContentElement;
			
			//if (i != 0){
				fileindex = fileindex + '''
					
					<i id="objetivo«idgen»«i»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				'''
				progresoobj = progresoobj + '''
					,"objetivo«idgen»«i»"
				'''
			//}

		}
		 	
		fileindex = fileindex + '''			
				</div>
			</div>
		'''

		fileindex = fileindex + '''
			<div class="panel-group" id="«idgen»" role="tablist" aria-multiselectable="true">
		'''
		for (var i = 0; i < tempwg1.listvalues.length; i++){
			val tempwg2 = tempwg1.listvalues.get(i) as RecordValue;
			val tempwg3 = tempwg2.recordvalues.get(0).fieldvalue as Text;
			val tempwg4 = tempwg2.recordvalues.get(1).fieldvalue as ListValue;
			
				fileindex = fileindex + '''
					<div class="panel panel-default">
		                <div class="panel-heading" role="tab" id="«idgen»«i»">

		                    <h4 class="panel-title''' fileindex = fileindex + ''' control_objetivo_unico_click" id="«idgen»«i»" data-type="VerticalAccordion" data-desc="«wg.name»"'''fileindex = fileindex + '''>
		                        <a class="events" data-toggle="collapse" data-parent="«idgen»" href="#collapse«idgen»«i»" aria-expanded="true" aria-controls="collapse1">
		         '''
		        var secIdi1 = idgen + "e" + i.toString();
		        processElement(args, (i+j), tempwg3,secIdi1,title, fsa);
				fileindex = fileindex + '''</a>						
		                    </h4>
		                </div>        
		                <div id="collapse«idgen»«i»" class="panel-collapse collapse'''fileindex = fileindex + '''" role="tabpanel" aria-labelledby="heading«idgen»«i»"> 
		                    <div class="panel-body">
				'''		                 
				for (var x = 0; x < tempwg4.listvalues.length; x++){
					val tempwg41 = tempwg4.listvalues.get(x) as ContentElement;  
					var secIdi2 = idgen + "e" + i.toString() + "e" + x.toString(); 
      				processElement(args, (i+j+x), tempwg41,secIdi2,title, fsa);      			
      			}
				fileindex = fileindex + '''		        				
		                    </div>
		                </div>
	            	</div>
				
				'''
			}
	}
	
	
	

	/**
	 * Método encargado de agregar el código para el widget ImageTextRight.
	 * 
	 * @param wg Widget
	 * @param idgen Identificador único
	 *  
	 */
	def generateImageTextRight(Widget wg, String idgen){
		val tempwg1= wg.widgetelements.get(0) as Image;
		val tempwg2= wg.widgetelements.get(1) as Text;
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(9)» </h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
		
			<div class="col-md-6">
				<img id="«idgen»" class="img-responsive btnmostrar mano events control_objetivo_unico_click" data-type="ImageTextRight" data-desc="«wg.name»" data-target="#imagen«idgen»" src="«tempwg1.url»" alt="">
			</div>
			<div id="imagen«idgen»" class="col-md-6 hidden">   
				«tempwg2.html»			
			</div>		
		'''
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''
						
	}
	
	/**
	 * Método encargado de agregar el código para el widget ImageTextOver.
	 * 
	 * @param wg Widget
	 * @param idgen Identificador único
	 *  
	 */
	def generateImageTextOver(Widget wg, String idgen){
		val tempwg1= wg.widgetelements.get(0) as Image;
		val tempwg2= wg.widgetelements.get(1) as Text;	
		fileindex = fileindex + '''			
			<div class="row">
				<div class="col-md-12 interview">
					<h4><i class="fa fa-mouse-pointer"></i>&nbsp;«language.get(9)» </h4>
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>
			<div class="grid mask">
				<figure class="text">
					<img id="«idgen»" data-type="ImageTextOver" data-desc="«wg.name»" class="img-responsive mano btnmostrar control_objetivo_unico_click" title="Imagen" alt="figcaption" src="«tempwg1.url»">
				    	<figcaption>
				    		«tempwg2.html»
				    		
				        </figcaption>
				</figure>
			</div>		
		'''
		
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''
		
	}
	
	
	//«processText(tempwg2)»
	
	/**
	 * Método encargado de agregar el código para la metaclase Video.
	 * 
	 * @param vid Video
	 * @param idgen Identificador único
	 *  
	 */	
	def processVideo(Video vid, String idgen){
		fileindex = fileindex + '''
			<div class="row">
				<div class="col-md-12 interview">
					<i id="objetivo«idgen»" class="far fa-check-square fa-2x" aria-hidden="true"></i>
				</div>
			</div>	
		'''
		if (vid.id.contains('youtube')){

			fileindex = fileindex + '''
			   <h3>«vid.title»</h3>		   
			   <div class="embed-responsive embed-responsive-16by9">			
			   	<div id="player«idgen»" class="centered"></div>
			   </div>
			'''
			if (primervideo ==0){
				primervideo=1;				
			}			
			filevideo1 = filevideo1 + '''
			      var tag«idgen» = document.createElement('script');
			
			      tag«idgen».src = "https://www.youtube.com/iframe_api";
			      var firstScriptTag«idgen» = document.getElementsByTagName('script')[0];
			      firstScriptTag«idgen».parentNode.insertBefore(tag«idgen», firstScriptTag«idgen»);
			
			      var player«idgen»;
			     
			      
			      function visualizando«idgen»(){
						if (player«idgen».getPlayerState()==1){
							setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Playing", "Position" : "' + player«idgen».getCurrentTime() + '", "Duration" : "' + player«idgen».getDuration() + '" }]}');
							setTimeout(visualizando«idgen», 100);
						}			      	
			      }
			      function onPlayerStateChange«idgen»(event) {
			      	switch(event.data) {
				   	   	case 0:
				   	   		setObjetivoCompleto("objetivo«idgen»","Video«idgen»/«vid.title»","Video«idgen»");
				   	        break;
				   	    case 1:
				   			visualizando«idgen»();
				   		    break;
				   		case 2:
				   		   	setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Pause", "Position" : "' + player«idgen».getCurrentTime() + '", "Duration" : "' + player«idgen».getDuration() + '" }]}');
				   		   	break;   	  	    
			      	}
			      }
			'''
			var partvideo = vid.id.split('/embed/').get(1);
			var part1 = partvideo.split('\\?').get(0);
			var part2 = partvideo.split('\\?').get(1).split('\\=').get(1);
			filevideo2 = filevideo2 + '''			
			     player«idgen» = new YT.Player('player«idgen»', {
			     	  playerVars: {start: «part2»},
			          height: 'auto',
			          width: '100%',
			          videoId: '«part1»',
			          events: {
			            'onStateChange': onPlayerStateChange«idgen»
			          }
			     });
			'''									
		}else if (vid.type.value == 0) {
			if (primervideo ==0){
				primervideo=1;				
			}
			fileindex = fileindex + '''
				<div>
					<?php require_once('../../contentunit/php/funcionesgenerales.php'); echo getVideoIndieMediaAM("«vid.id»","«idgen»", "«vid.title»"); ?>
				</div>
			'''
			filevideo3 = filevideo3 + '''
			 	var player«idgen» = amp('«idgen»');
				player«idgen».addEventListener(amp.eventName.ended, function (e) { setObjetivoCompleto("objetivo«idgen»","Video«idgen»/«vid.title»","Video«idgen»");});
				player«idgen».addEventListener(amp.eventName.pause, function (e) { setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Pause", "Position" : "' + player«idgen».currentTime() + '", "Duration" : "' + player«idgen».duration() + '" }]}');});
				player«idgen».addEventListener(amp.eventName.play, function (e) { setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Play", "Position" : "' + player«idgen».currentTime() + '", "Duration" : "' + player«idgen».duration() + '" }]}');});
				player«idgen».addEventListener(amp.eventName.playing, function (e) { setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Playing" , "Position" : "' + player«idgen».currentTime() + '" ,"Duration" : "' + player«idgen».duration() + '" }]}');});			
			'''
			/*filevideo3 = filevideo3 + '''
				playerInstance«idgen».on('time', function (e) {
					setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Playing" , "Position" : "' + e.position + '" ,"Duration" : "' + e.duration + '" }]}');				
				});
				
				playerInstance«idgen».on('seek', function (e) {	
					setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Seek" , "Position" : "' + e.position + '" ,"Offset" : "' + e.offset + '" ,"Duration" : "' + playerInstance«idgen».getDuration() + '" }]}');
				});		
	
				playerInstance«idgen».on('play', function (e) {
					setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Play", "Position" : "' + playerInstance«idgen».getPosition() + '", "Duration" : "' + playerInstance«idgen».getDuration() + '" }]}');
	
				});
	
				playerInstance«idgen».on('pause', function (e) {
					setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Pause", "Position" : "' + playerInstance«idgen».getPosition() + '", "Duration" : "' + playerInstance«idgen».getDuration() + '" }]}');
				});
	
				playerInstance«idgen».on('complete', function (e) {
					setObjetivoCompleto("objetivo«idgen»","Video«idgen»/«vid.title»","Video«idgen»");
				});		
			'''*/
		}else{
			if (primervideo ==0){
				primervideo=1;				
			}
			fileindex = fileindex + '''
				<div>
					<?php require_once('../../contentunit/php/funcionesgenerales.php'); echo getVideoIndieMediaInteractivo("«vid.id»","«idgen»", "«vid.title»"); ?>
				</div>
			'''
			/*filevideo3 = filevideo3 + '''
			 	var player«idgen» = amp('«idgen»');			 
				player«idgen».addEventListener(amp.eventName.ended, function (e) { console.log("Video ended!"); setObjetivoCompleto("objetivo«idgen»","Video«idgen»/«vid.title»","Video«idgen»");});
				player«idgen».addEventListener(amp.eventName.pause, function (e) { console.log("Video paused!"); setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Pause", "Position" : "' + player«idgen»currentTime() + '", "Duration" : "' + player«idgen».duration() + '" }]}');});
				player«idgen».addEventListener(amp.eventName.play, function (e) { console.log("Video play!"); setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Play", "Position" : "' + player«idgen».currentTime() + '", "Duration" : "' + player«idgen».duration() + '" }]}');});
				player«idgen».addEventListener(amp.eventName.playing, function (e) { console.log("Video playing!"); setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Playing" , "Position" : "' + player«idgen».currentTime() + '" ,"Duration" : "' + player«idgen».duration() + '" }]}');});			
			'''*/
/* 			filevideo3 = filevideo3 + '''
				playerInstance«idgen».on('time', function (e) {
					setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Playing" , "Position" : "' + e.position + '" ,"Duration" : "' + e.duration + '" }]}');				
				});
				
				playerInstance«idgen».on('seek', function (e) {	
					setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Seek" , "Position" : "' + e.position + '" ,"Offset" : "' + e.offset + '" ,"Duration" : "' + playerInstance«idgen».getDuration() + '" }]}');
				});		
	
				playerInstance«idgen».on('play', function (e) {
					setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Play", "Position" : "' + playerInstance«idgen».getPosition() + '", "Duration" : "' + playerInstance«idgen».getDuration() + '" }]}');
	
				});
	
				playerInstance«idgen».on('pause', function (e) {
					setObjetivoInteraccion("objetivo«idgen»","Video«idgen»/«vid.title»",'{ "video" : [ { "Type" : "Pause", "Position" : "' + playerInstance«idgen».getPosition() + '", "Duration" : "' + playerInstance«idgen».getDuration() + '" }]}');
				});
	
				playerInstance«idgen».on('complete', function (e) {
					setObjetivoCompleto("objetivo«idgen»","Video«idgen»/«vid.title»","Video«idgen»");
				});		
			'''*/
		}
		progresoobj = progresoobj + '''
			,"objetivo«idgen»"
		'''
	}
		
	/**
	 * Método encargado de agregar el códgio para la metaclase Image. Agrega una img de HTML. 
	 */	
	def processImage(Image im){
		switch (im.type.value){
			case 1:{
				fileindex = fileindex + '''
					<img src="«im.url»" alt="Imagen" title="Imagen" class="img-responsive" style="width:100%;">			
				'''	
			}
			case 0:{
				fileindex = fileindex + '''
					<img src="«im.url»" alt="Imagen" title="Imagen" class="img-responsive">			
				'''		
			}
			default :{
				fileindex = fileindex + '''
					<img src="«im.url»" alt="Imagen" title="Imagen" class="img-responsive">			
				'''	
			}
		}
		
		
	}
	
	/**
	 * Método encargado de agregar el código para la metaclase Text. Recibe código HTML que es agregado al código.
	 * 
	 * @param te Código HTML formateado.
	 * 
	 */
	def processText(Text te){
		fileindex = fileindex + te.html 
	}
	
	/**
	 * Método encargado de comprobar el tipo del elemento recibido y generar su código.
	 * 
	 * @param e1 ContentElment
	 * @param secId Identificador único
	 * @param title Nombre del elemento
	 *   
	 */
	//Procesamiento de la metaclase ContentElement. Los elementos contenidos dentro de una columna.
	def processElement(List<ContentElement> args, int i, ContentElement el, String secId, String title, IFileSystemAccess2 fsa){	
		if (el instanceof Text){
			val et = el as Text
	  		processText(et);		
		}else if (el instanceof Image){
	  		val im = el as Image
	  		processImage(im);		  					
		}else if (el instanceof Video){
	  		val vi = el as Video
	  		processVideo(vi,secId);
	  	}else if (el instanceof Row){
	  		processRowInElement(args, el, secId, title, fsa);			
	  	}else if (el instanceof Widget){		  		
	  		switch (el.widgettype.name){
	  			case 'Couples':{
	  				generateCouples(el, secId,title,args,i, fsa,1);
	  			}
	  			case 'Schema':{
	  				generateSchema(el, secId,title,args,i, fsa,1);
	  			}
	  			case 'ContainerTest':{
	  				containsContainerTest = 1;
	  				generateContainerTest(el, secId,title,args,i, fsa,1);
	  			}
	  			case 'ImageTextOver':{	  				
	  				generateImageTextOver(el, secId);  				
	  			}
	  			case 'ImageTextRight':{
	  				generateImageTextRight(el, secId);
	  			}
	  			case 'VerticalAccordion':{
	  				generateVerticalAccordion(el, secId,title,args,i, fsa, 1);
	  			}
	  			case 'HorizontalTabs':{
	  				generateHorizontalTabs(el, secId,title,args,i, fsa, 1);
	  			}
	  			case 'ModalButton':{
	  				generateModalButton(el, secId,title,args,i, fsa, 1);
	  			}
	  			case 'AnimationInOut':{
	  				var List<String> animationreturn = animation.generateAnimationInOut(el, secId,title,args,i, fsa, fileindex, progresoobj,fileanimation,fileanimationcss, 1,language);
	  				fileindex = animationreturn.get(0);
	  				progresoobj= animationreturn.get(1);
	  				fileanimation= animationreturn.get(2);
	  				fileanimationcss = animationreturn.get(3);
	  			}
	  			case 'RectangleDragAndDrop':{
	  				containsRectangleDragAndDrop = 1;
	  				generateDragAndDrop(el, secId, title,args,i,fsa, 1);
	  			}
	  			case 'TextualDragAndDrop':{
	  				containsTextualDragAndDrop = 1;
	  				var List<String> textualreturn = textualdraganddrop.generateTextualDragAndDrop(el, secId,title,args,i, fsa, fileindex, progresoobj,filetextual,1,language);
	  				fileindex = textualreturn.get(0);
	  				progresoobj= textualreturn.get(1);	  				
	  				filetextual= textualreturn.get(2);
	  			}
	  			case 'ContainerAudioTerm':{
	  				val elv = el as Widget
	  				generateAudioTerm(el, secId,title,args,i,fsa, 1);	  				
	  			}
	  			case 'ContainerTrueFalse':{
	  				containsTrueFalse = 1; 
	  				val elv = el as Widget
	  				generateTrueFalse(el, secId,title,args,i,fsa, 1);	  				
	  			}
	  			case 'ImageSound':{
	  				val elv = el as Widget
	  				generateImageSound(el, secId,title,args,i,fsa, 1);	  				
	  			}
	  			case 'ChooseOption':{
	  				generateChooseOption(el, secId,title,args,i,fsa, 1);
	  				
	  			}
	  		}		  		
	  	}else if (el instanceof PlaceHolder){
	  		val tph = el as PlaceHolder
	  		val arge = args.get(i);
	  		switch (tph.type.name){
	  			case 'TextType':{
		  			val et = arge as Text
		  			processText(et);	
	  			}
	  			case 'ImageType':{
		  			val im = arge as Image
		  			processImage(im);	
	  			}
	  			case 'VideoType':{
		  			val vi = arge as Video
		  			processVideo(vi,secId);	
	  			}
	  			case 'ImageTextOver':{	  				
	  				val typeWidget = arge as Widget
	  				generateImageTextOver(typeWidget, secId);  				
	  			}
	  			case 'ImageTextRight':{
	  				val typeWidget = arge as Widget
	  				generateImageTextRight(typeWidget, secId);
	  			}
	  			case 'VerticalAccordion':{
	  				val typeWidget = arge as Widget
	  				generateVerticalAccordion(typeWidget, secId,title,args,i, fsa,2);
	  			}		  			
	  			case 'HorizontalTabs':{
	  				val typeWidget = arge as Widget
	  				generateHorizontalTabs(typeWidget, secId,title,args,i, fsa,2);
	  			}
	  			case 'ModalButton':{
	  				val typeWidget = arge as Widget
	  				generateModalButton(typeWidget, secId,title,args,i, fsa,2);
	  			}
	  			case 'AnimationInOut':{
	  				val typeWidget = arge as Widget
	  				var List<String> animationreturn = animation.generateAnimationInOut(typeWidget, secId,title,args,i, fsa, fileindex, progresoobj,fileanimation,fileanimationcss, 2,language);
	  				fileindex = animationreturn.get(0);
	  				progresoobj= animationreturn.get(1);
	  				fileanimation= animationreturn.get(2);
	  				fileanimationcss = animationreturn.get(3);
	  			}
	  			case 'RectangleDragAndDrop':{
	  				containsRectangleDragAndDrop = 1;
	  				val typeWidget = arge as Widget
	  				generateDragAndDrop(typeWidget, secId, title,args,i,fsa,2);
	  			}
	  			case 'TextualDragAndDrop':{	  				
	  				containsTextualDragAndDrop = 1;
	  				val typeWidget = arge as Widget	  				
	  				var List<String> textualreturn = textualdraganddrop.generateTextualDragAndDrop(typeWidget, secId,title,args,i, fsa, fileindex, progresoobj,filetextual,2,language);	  				
	  				fileindex = textualreturn.get(0);	  				
	  				progresoobj= textualreturn.get(1);	  				
	  				filetextual= textualreturn.get(2);
	  			}
	  			case 'ContainerAudioTerm':{
	  				val typeWidget = arge as Widget
	  				generateAudioTerm(typeWidget, secId,title,args,i, fsa, 2);
	  			}
	  			case 'ContainerTrueFalse':{
	  				containsTrueFalse =1;
	  				val typeWidget = arge as Widget
	  				generateTrueFalse(typeWidget, secId,title,args,i, fsa, 2);
	  			}
	  			case 'ImageSound':{
	  				val typeWidget = arge as Widget
	  				generateImageSound(typeWidget, secId,title,args,i, fsa, 2);
	  			}
	  			case 'ContainerTest':{
	  				containsContainerTest = 1;
	  				val typeWidget = arge as Widget
	  				generateContainerTest(typeWidget, secId,title,args,i, fsa,2);
	  			}
	  			case 'ChooseOption':{
	  				val typeWidget = arge as Widget
	  				generateChooseOption(typeWidget, secId,title,args,i,fsa, 2);
	  				
	  			}
	  			case 'Schema':{
	  				val typeWidget = arge as Widget
	  				generateSchema(typeWidget, secId,title,args,i, fsa,2);
	  			}
	  			case 'Couples':{
	  				val typeWidget = arge as Widget
	  				generateCouples(typeWidget, secId,title,args,i, fsa,2);
	  			}
	  		}	
		}
	}
	
	/**
	 * Agrega el código HTML para cualquier columna. Agrega su marca al identificador y recorre los elementos que componen 
	 * una columna llamando al método que procesa estos elementos. Finalmente agrega el código HTLM que cierra cualquier columna.
	 */
	def processColumn(List<ContentElement> args, int indexcol, Column co, String secId, String title, IFileSystemAccess2 fsa){
		fileindex = fileindex + '''
			 <div class="col-md-«co.width»">			
		'''
		
		for (var i = 0; i < co.elements.length; i++){
			var secId3 = secId + "e" + i.toString();
			processElement(args, indexcol + i, co.elements.get(i), secId3, title, fsa);	
		}
		
		fileindex = fileindex + '''
		   </div>		
		'''	
	}
	
	/**
	 * Agrega el código común para cada fila. Concatena al identificar su marca y llama a la función
	 * que procesa las columnas contenidas en la fila. Finalmente cierra la sección.
	 */
	def processRow(List<ContentElement> args, Row ro, String secId, String title, IFileSystemAccess2 fsa){
		fileindex = fileindex + '''
			<section class="bgwhitecab2">
		      <div class="container">
				<br>
		        <div class="row">
		'''
		for (var i = 0; i < ro.columns.length; i++){		
			var secId2 = secId + "c" + i.toString();	
			processColumn(args, i, ro.columns.get(i), secId2, title, fsa);			
		}

		fileindex = fileindex + '''
				</div>
		     </div>
		   </section>		
		'''			        
	} 
	
	def processRowInElement(List<ContentElement> args, Row ro, String secId, String title, IFileSystemAccess2 fsa){
		fileindex = fileindex + '''
		        <div class="row">
		'''
		for (var i = 0; i < ro.columns.length; i++){		
			var secId2 = secId + "c" + i.toString();	
			processColumn(args, i, ro.columns.get(i), secId2, title, fsa);			
		}

		fileindex = fileindex + '''
				</div>
		'''			        
	} 
	/**
	 * Agregar el código de cada sección HTML5 y llama a la función que genera el código por cada fila.
	 * Si la fila está basada en una plantilla se llama a la función por cada fila que compone la plantilla.
	 * Se crea una cadena de caracteres única conforme se recorre el metamodelo que servirá como identificadores
	 * únidos para HTML. 
	 * 
	 * */
	def processSections(Section se, Integer secId, IFileSystemAccess2 fsa){
		if (se.type.value == 1){
			fileindex = fileindex + '''
				<section id="apdo«secId»" class="section-divider textdividersub divider1" >
			'''
		}else{
			fileindex = fileindex + '''
				<section id="apdo«secId»" class="section-divider textdividersubimage divider1" style="background:url('«se.image»');">
			'''
		}
		/** <section id="apdo«secId»" class="section-divider textdividersub divider1" style="background:url('«se.image»');">*/
		/** <section id="apdo«secId»" class="section-divider textdividersub divider1" > */
		fileindex = fileindex + '''		
	      <div class="container">
	        <h1>«se.title»</h1>
	        <hr>
	        <p></p>
	      </div>
	    </section>
	    '''
	    for (var i = 0; i < se.rows.length; i++){
	    	var rowt = se.rows.get(i).usetemplate;
	    	var List<ContentElement> args = new ArrayList();
	    	if (rowt !== null){
	    		args = rowt.templateelements;
	    		for (var j = 0; j < rowt.typetemplate.rows.length; j++){
					var String idgen = "s" + secId.toString() + "r" + i.toString() + "rt" + j.toString();
					processRow(args, rowt.typetemplate.rows.get(j),idgen,se.title,fsa);					
		  		}
	    	}else{
	    		var String idgen = "s" + secId.toString() + "r" + i.toString();
	    		processRow(args, se.rows.get(i),idgen,se.title, fsa);
	    	}	
	    }    
	
		progresoobj = progresoobj + ''',"section"'''.toString()		
	}
	
	/**
	 * Existe código del fichero index.php que es común a todas las unidades independientemente de su contenido.
	 * Esta función encargada devuelve la tercera parte de este código común.
	 */
	def writefileindexp3(){'''
	 <!-- Modal -->
	  <div class="modal fade" id="myModal" role="dialog">
	    <div class="modal-dialog">
	    
	      <!-- Modal content-->
	      <div class="modal-content">
	        <div class="modal-header">
	          <button type="button" class="close" data-dismiss="modal">&times;</button>
	          <h4 class="modal-title">UPCTforma</h4>
	        </div>
	        <div class="modal-body">
	          <p id="bodymymodal"></p>
	        </div>
	        <div class="modal-footer">
	          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
	        </div>
	      </div>
	      
	    </div>
	  </div>
		<script>
			function entrarRanking(link) {
				url = "../ranking.php";
				var url2 = url + "?PHPSESSID=" + '<?php echo session_id(); ?>';		
				var form = '';
				form += "<input type='hidden' name='unidades' value='"+ unidades +"'>";
	            form += "<input type='hidden' name='link' value='"+ link +"'>";
				$('<form action="'+url2+'" method="POST">'+form+'</form>').appendTo('body').submit();
				
			}
		</script>
		
		<footer id="footerwrap">
					<div class="container-fluid">
						<div class="row">
							<div class="col-md-3 indie_footer">
								<p><a href="https://twitter.com/indie_eu?lang=es" target="_blank"><i class="fab fa-twitter visto"></i></a></p>
								<p><a href="http://indie.upct.es/" target="_blank"><i class="fas fa-globe visto"></i></a></p>
								<p><i class="far fa-edit visto"></i> INDIe Project</p>
							</div>
							<div class="col-md-9 indie_footer">
							</div>
						</div>
						<br>	
					</div>
				</footer>
	    	<div class="modal fade" id="sharedModal" tabindex="-1" role="dialog" aria-labelledby="sharedModalLabel">
	            <div class="modal-dialog" role="document">
	               
	            </div>
	        </div>
	
	 	
	    <script type="text/javascript" src="../../contentunit/bootstrap/js/bootstrap.min.js"></script>
	    <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
	    <script type="text/javascript" src="../../contentunit/progreso/lib/jquery.line.js"></script>
	    <script src="../../contentunit/progreso/lib/jQuery-plugin-progressbar.js"></script>
	    <!-- MAPA DE PROGRESO / Control de OBJETIVOS-->
		<script type="text/javascript" language="javascript" src="progreso_datos.js"></script>
	 	<script type="text/javascript" language="javascript" src="progreso_obj.js"></script>
	    <script type="text/javascript" language="javascript" src="../../contentunit/progreso/js/progreso_mapa.js"></script>   
	    <script type="text/javascript" language="javascript" src="../../contentunit/progreso/js/progreso_control.js"></script>	    	    
	    <script type="text/javascript" language="javascript" src="../../contentunit/js/libraries.min.js"></script>
		<script type="text/javascript" src="animation.js"></script>
		<script type="text/javascript" src="imagesound.js"></script>
	    <script type="text/javascript" src="schema.js"></script>
	    <script type="text/javascript" src="couples.js"></script>
	   </body>
	  </html>
	'''	
	}
	
	/**
	 * Existe código del fichero index.php que es común a todas las unidades independientemente de su contenido.
	 * Esta función encargada devuelve la segunda parte de este código común.
	 */
	def writefileindexp2(String name){'''
	</ul>
					</div>
					<!--/.nav-collapse -->
				</div>
			</div>
		</div>	
	  
	    <div id="progreso_mp"></div>
	    <section class="section-divider1 textdividersub">
	    	<div class="container-fluid">
	      		<h1>«name»</h1>
	    	</div>
	    </section>
	'''}
	
	
	/**
	 * Existe código del fichero index.php que es común a todas las unidades independientemente de su contenido.
	 * Esta función encargada devuelve la primera parte de este código común.
	 */
	def writefileindexp1(){'''
	    <!--Progreso-->
	    <link rel="stylesheet" type="text/css" href="../../contentunit/css/iaVideo.min.css">
	    <link rel="stylesheet" type="text/css" href="../../contentunit/progreso/css/progreso_mapa.css">
	
	<link rel="icon" href="../../contentunit/img/favicon.png" type="image/png">
	
	   <script type="text/javascript" src="../../contentunit/jquery/jquery-1.11.3.min.js"></script>
	   <script src="https://code.jquery.com/ui/1.11.3/jquery-ui.min.js"></script>
	   <script src="../../contentunit/jquery-ui-touch-punch-master/jquery.ui.touch-punch.min.js"></script>
	    	
	    	<script src="//amp.azure.net/libs/amp/2.3.2/azuremediaplayer.min.js"></script>
	   	   	<script src="../../contentunit/js/iaVideo.min.js"></script>
	    <script src="https://content.jwplatform.com/libraries/47wx7PfZ.js"></script>
		<script type="text/x-mathjax-config">
		  MathJax.Hub.Config({
		    tex2jax: {inlineMath: [["$","$"],["\\(","\\)"]]}
		  });
		</script>
		<script type="text/javascript" src="../../MathJax-master/MathJax.js?config=TeX-AMS_HTML-full"></script>
	  </head>
	
	  <body id="body" data-spy="scroll" data-offset="50" data-target="#navbar-main" unload="javascript:finUnidad();" onLoad="setInterval('keepAlive()',600000);">
		<script type="text/javascript">
			var link = '<?php echo $LINK->id; ?>';
			var title = '<?php echo $LINK->title; ?>';
			var usd = '<?php echo $USER->id; ?>';
			var displayname = '<?php echo $USER->displayname; ?>';
			var email = '<?php echo $USER->email; ?>';
			var firstname = '<?php echo $USER->firstname; ?>';
			var lastname = '<?php echo $USER->lastname; ?>';
			var session_id = '<?php echo session_id(); ?>';
			var tipounit = '<?php echo $tipo; ?>';
			var points = '<?php echo $points; ?>';
			var unidades = '<?php echo $unidades; ?>';
			var identificador = '<?php echo $identificador; ?>';
			var context = '<?php echo $context; ?>';
		</script>
	
		<div id="navbar-main">
			<!-- Fixed navbar -->
			<div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
				<div class="container-fluid">
					<div class="navbar-header">
						<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
							<span class="icon icon-menu" style="font-size:30px; color:#3498db;"></span>
						</button>
						<a class="navbar-brand hidden-xs hidden-sm sctop" href="#body">
							<img src="../../contentunit/img/logo.png" class="img-responsive" style="margin-top: -5px" alt="logo UPCT" />
						</a>
					</div>
					<div class="navbar-collapse collapse">
						<ul class="nav navbar-nav">
	'''
	}
	/**
	 * Existe código del fichero index.php que es común a todas las unidades independientemente de su contenido.
	 * Esta función encargada devuelve la primera parte de este código común sin interoperabilidad.
	 */
	def writefileindexp1WithoutInteroperability(){'''
	    <!--Progreso-->
	    <link rel="stylesheet" type="text/css" href="../../contentunit/css/iaVideo.min.css">
	    <link rel="stylesheet" type="text/css" href="../../contentunit/progreso/css/progreso_mapa.css">
	
		<link rel="icon" href="../../contentunit/img/favicon.png" type="image/png">
		
	   <script type="text/javascript" src="../../contentunit/jquery/jquery-1.11.3.min.js"></script>
	   <script src="https://code.jquery.com/ui/1.11.3/jquery-ui.min.js"></script>
	   <script src="../../contentunit/jquery-ui-touch-punch-master/jquery.ui.touch-punch.min.js"></script>
	   	<script src="//amp.azure.net/libs/amp/2.3.2/azuremediaplayer.min.js"></script>
	   	<script src="../../contentunit/js/iaVideo.min.js"></script>
	   
	    <script src="https://content.jwplatform.com/libraries/47wx7PfZ.js"></script>
		<script type="text/x-mathjax-config">
		  MathJax.Hub.Config({
		    tex2jax: {inlineMath: [["$","$"],["\\(","\\)"]]}
		  });
		</script>
		<script type="text/javascript" src="../../MathJax-master/MathJax.js?config=TeX-AMS_HTML-full"></script>
	  </head>
	
	  <body id="body" data-spy="scroll" data-offset="50" data-target="#navbar-main">
		
		<div id="navbar-main">
			<!-- Fixed navbar -->
			<div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
				<div class="container-fluid">
					<div class="navbar-header">
						<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
							<span class="icon icon-menu" style="font-size:30px; color:#3498db;"></span>
						</button>
						<a class="navbar-brand hidden-xs hidden-sm sctop" href="#body">
							<img src="../../contentunit/img/logo.png" class="img-responsive" style="margin-top: -5px" alt="logo UPCT" />
						</a>
					</div>
					<div class="navbar-collapse collapse">
						<ul class="nav navbar-nav">
	'''
	}
	/**
	 * Escribe la cabecera el fichero index.php
	 * 
	 * @param cu CotentUnit
	 */
	def writeHeader(ContentUnit cu){
		'''
		<!DOCTYPE html>
		<?php
		
		$numero = count($_GET);
		$tags = array_keys($_GET);// obtiene los nombres de las varibles
		$valores = array_values($_GET);// obtiene los valores de las varibles
		
		//require_once $_SERVER['['/]'DOCUMENT_ROOT'[']'/]. "/tsugi/config.php";
		require_once "../../../config.php";
		
		use \Tsugi\Util\LTI;
		use \Tsugi\Core\Settings;
		use \Tsugi\Core\LTIX;
		use \Tsugi\UI\SettingsForm;
		
		$LTI = LTIX::requireData();
		$p = $CFG->dbprefix;
		
		if (isset($_POST["points"])){
			//$points = json_decode($_POST["points"], true);
			$points = $_POST["points"];
			$tipo = "gamification";
			$identificador = $_POST["identificador"];
			$unidades = $_POST["unidades"];
		}else{
			$points = "";
			$tipo = "normal";
			$uri_parts = explode('?', $_SERVER['REQUEST_URI'], 2);
			$identificador =  "https://". $_SERVER["HTTP_HOST"] . $uri_parts[0];
			$unidades = 0;
		}
		 $context = $_SESSION["lti"]["context_id"];
		
		?>
		<html>
		  <head>
		    <meta charset="utf-8">
		    <title>«cu.name»</title>
		    <!-- Bootstrap 3.3.5 -->
		    <link rel="stylesheet" href="../../contentunit/bootstrap/css/bootstrap.css" media="screen" charset="utf-8">
		    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
		    <link href="//amp.azure.net/libs/amp/latest/skins/amp-default/azuremediaplayer.min.css" rel="stylesheet">
		    <!-- Font Awesome -->
		    <link rel="stylesheet" href="../../contentunit/font-awesome/css/fontawesome-all.min.css" media="screen" charset="utf-8">		    
		    <!-- Base -->

		    <link rel="stylesheet" href="../../contentunit/css/styles.min.css" media="screen" charset="utf-8">
		    <link rel="stylesheet" href="../../contentunit/css/truefalse.css" media="screen" charset="utf-8">
			<link rel="stylesheet" type="text/css" href="animation.css">

		'''
	}

	/**
	 * Escribe la cabecera el fichero index.php sin interoperabilidad
	 * 
	 * @param cu CotentUnit
	 */
	def writeHeaderWithoutInteroperability(ContentUnit cu){
		'''
		<!DOCTYPE html>
		<html>
		  <head>
		    <meta charset="utf-8">
		    <title>«cu.name»</title>
		    <!-- Bootstrap 3.3.5 -->
		    <link rel="stylesheet" href="../../contentunit/bootstrap/css/bootstrap.css" media="screen" charset="utf-8">
		    <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
		    <link href="//amp.azure.net/libs/amp/latest/skins/amp-default/azuremediaplayer.min.css" rel="stylesheet">
		    <!-- Font Awesome -->
		    <link rel="stylesheet" href="../../contentunit/font-awesome/css/fontawesome-all.min.css" media="screen" charset="utf-8">		    
		    <!-- Base -->


		    <link rel="stylesheet" href="../../contentunit/css/styles.min.css" media="screen" charset="utf-8">
		    <link rel="stylesheet" href="../../contentunit/css/truefalse.css" media="screen" charset="utf-8">
			<link rel="stylesheet" type="text/css" href="animation.css">		    

		'''
	}
	
	def writeCode(CharSequence content)
	'''
		«content»
	'''
	
	/**
	 * Función encargada de crear el fichero progreso_datos.js.
	 * Este fichero es utilizado para crear la cabecera de las unidades.
	 * 
	 * @param cu ContentUnit
	 * @param fsa Sistema de ficheros
	 * 
	 */
	def initializeObjective(ContentUnit cu, IFileSystemAccess2 fsa){
		var String fileobjective
		
		fileobjective = '''var definicionobjetivos = new Array();'''.toString()
		
		fileobjective = fileobjective + '''var circulos = new Array('''.toString()		
		
		for (var i = 0; i < cu.sections.length; i++){
			if (i != 0) {fileobjective = fileobjective + ''','''.toString()}
			fileobjective = fileobjective + '''[80,«250*(i)»,150,275]'''.toString()			
		}
		fileobjective = fileobjective + ''');'''.toString()
		
		fileobjective = fileobjective + '''var lineas= new Array('''.toString()				
		for (var i = 0; i < cu.sections.length; i++){
			if (i > 0){
				if (i > 1){fileobjective = fileobjective +  ''','''.toString()}
				fileobjective = fileobjective + '''[«i»,«i+1»]'''.toString()
			}	
		}
		fileobjective = fileobjective + ''');'''.toString()
		
		fileobjective = fileobjective + '''var titulos= new Array('''.toString()
		for (var i = 0; i < cu.sections.length; i++){
			if (i != 0) {fileobjective = fileobjective + ''','''.toString()}
			fileobjective = fileobjective + '''[245,«250*(i)-117»,155,35,3,"«cu.sections.get(i).name»"]'''.toString()
		}
		fileobjective = fileobjective + ''');'''.toString()

		fsa.generateFile("progreso_datos.js",fileobjective)		 
	}
				

	/**
	 * Función encargada de devolver la cabecera común a las animaciones HTML5 con Canvas
	 * 
	 * @param ph 
	 */
	def initializeAnimation0(){
	'''
		canvas {
			width: 100%;
		}
		.mano {
			cursor: pointer;
		}
	'''
	}
	 
	 /**
	  * Recibe una ContentUnit y genera el código para crear una unidad de contenido independiente.
	  * 	  
	  * @param cu ContentUnit
	  * 
	  * 1. Agrega a la variable fileindex la cabecera del fichero index.php
	  * 2. Inicializa la variable progresoobj para almacenar los objetivos a superar divididos por secciones.
	  * 3. Crea el fichero progreso_datos.js
	  * 4. Recorre las secciones de una ContentUnit. Por cada sección sus filas y por cada fila mira si la fila está basada en una plantilla.
	  * 	En cuyo caso recorre las filas de la plantilla. Por cada fila sus columnas. Por cada columna filtra los PlaceHolder. 
	  * 	Por cada PlaceHolder comprueba si es un WidgetType en cuyo caso agrega el enlace a las librerias CSS
	  * 	predefinidas para cada tipo de Widget excepto para las animaciones de HTML5 con canvas donde se crea un
	  * 	fichero por cada animación indicando el ancho de la animación.
	  * 5. Agrega a filindex la parte 1 del código común para todos los index.php
	  * 			
	  * 		 
	  * 
	  */
	  
	def compile(ContentUnit cu, IFileSystemAccess2 fsa){	
		progresoobj = '';
		fileindex = ''; 
		filetest = '';
		filetextual = ''; 
		filevideo1 = '';
		filetruefalse = '';	
		filevideo2 = '';
		filevideo3 = '';
		fileanimation = '';
		fileanimationcss = '';
		fileImageSound='';
		fileSchema='';
		filecouples='';
		primervideo = 0;
		animation = new AnimationInOut();
		textualdraganddrop = new TextualDragAndDrop();

		switch cu.language.value{
			case 0: language = #["Match each image with its text","Click on the schema","Click on the correct option","Click on the images","Click on the term","Answer each question","Match each concept with its definition","Click on the button","Click on each tab","Click on the image","Classify in true or false", "Check your answers","correct answers"]				
			case 1: language = #["Enlaza cada texto con su imagen","Pulsa sobre el esquema","Pulsa sobre la opción correcta","Pulsa en las imágenes","Pulsa en el termino","Responde cada pregunta","Enlaza cada concepto con su definición","Pulsa sobre el botón","Pulsa en cada pestaña","Pulsa en la imagen", "Clasifica en verdadero o falso", "Comprueba tus respuestas","respuestas correctas"]
			case 2: language = #["Associe chaque image avec le texte correspondant","Clique sur le schéma","Choisis l'option correcte","Clique sur l'images","Clique sur chaque terme","Réponds à chaque question","Associe chaque concept avec sa définition","Clique sur le bouton","Clique sur chaque onglet","Clique sur l'image","Indiquez Vrai ou Faux", "Verífier les réponses","réponses correctes"]
			case 3: language = #["Ταιριάξτε κάθε εικόνα με το κείμενο της","Κάντε κλικ στο σχήμα","Κάντε κλικ στην σωστή επιλογή","Κάντε κλικ στις εικόνες","Κάντε κλικ στον όρο","Απαντήστε σε κάθε ερώτηση","Ταιριάξτε κάθε έννοια με τον ορισμό της","Κάντε κλικ στο κουμπί","Κάντε κλικ σε κάθε καρτέλα","Κάντε κλικ στην εικόνα","Κατατάξτε ως σωστό ή λάθος", "Ελέγξτε τις απαντήσεις σας","σωστές απαντήσεις"]
			case 4: language = #["Sujunkite paveikslėlį su tekstu","Spustelkite  schemą","Spustelkite teisingą atsakymą","Spustelkite paveikslėlius","Spustelkite terminą","Atsakykite  į klausimus","Sujunkite sąvoką su jos apibudinimu","Spustelkite mygtuką","Spustelkite skirtukus","Spustelkite paveikslėlį","Pažymėkite teisingus ir neteisingus atsakymus", "Tikrinti","teisingų atsakymų"]
		}
		
		//Agrega a la variable fileindex (variable global para generar el index.php) la cabecera del fichero index.php
		
		if (cu.type.value == 0){
			fileindex = writeHeader(cu).toString	
		}else{
			fileindex = writeHeaderWithoutInteroperability(cu).toString
		}
		/*var pathcadena = fsa.getURI("").toFileString();		
		if (pathcadena !== null){
			if (pathcadena.contains("preview")){
				fileindex = writeHeaderWithoutInteroperability(cu).toString
			}else{
				fileindex = writeHeader(cu).toString	
			}	
		}else{
			fileindex = writeHeaderWithoutInteroperability(cu).toString
		}*/			
		
				
		//Inicializa la variable progresoobj para almacenar los objetivos a superar divididos por secciones.
		progresoobj = '''var nombreobjetivos = new Array("objetivos"'''.toString()
		
		//Crea el fichero progreso_datos.js
		initializeObjective(cu,fsa)
		
		/** Recorre las secciones de una ContentUnit. Por cada sección sus filas y por cada fila mira si la fila está basada en una plantilla.
		  * 	En cuyo caso recorre las filas de la plantilla. Por cada fila sus columnas. Por cada columna filtra los PlaceHolder. 
		  * 	Por cada PlaceHolder comprueba si es un WidgetType en cuyo caso agrega el enlace a las librerias CSS
		  * 	predefinidas para cada tipo de Widget excepto para las animaciones de HTML5 con canvas donde se crea un
		  * 	fichero por cada animación indicando el ancho de la animación.
		  */


		if (cu.type.value == 0){
			fileindex = fileindex + writefileindexp1().toString()	
		}else{
			fileindex = fileindex + writefileindexp1WithoutInteroperability().toString()
		}
		
		/*if (pathcadena !== null){
			// Agrega a filindex la parte 1 del código común para todos los index.php
			if (pathcadena.contains("preview")){
				fileindex = fileindex + writefileindexp1WithoutInteroperability().toString()
			}else{
				fileindex = fileindex + writefileindexp1().toString()	
			}
		}else{
			fileindex = fileindex + writefileindexp1WithoutInteroperability().toString()
		}*/
		
		// Agrega a fileindex el menú de navegación creando un enlace a cada una de las secciones de la unidad.
		for (var i = 0; i < cu.sections.length; i++){
			fileindex = fileindex + '''<li> <a href="#apdo«i»" class="scold navbar-link">«cu.sections.get(i).name»</a></li>'''.toString()
		}
		
		//Agrega a filindex la parte 2 del código común para todos los index.php
		fileindex = fileindex + writefileindexp2(cu.name).toString()
		
		//Por cada sección contenida en la unidad llama al método processSections para generar su contenido.
		for (var i = 0; i < cu.sections.length; i++){
			processSections(cu.sections.get(i),i,fsa)			
		}
		
		//Agrega a filindex la parte 3 del código común para todos los index.php
		fileindex = fileindex + writefileindexp3().toString()
		if (primervideo == 1){
			fileindex = fileindex + '''				
				<script type="text/javascript" src="video.js"></script>
			'''
		}		
		if (containsRectangleDragAndDrop==1){
			fileindex = fileindex + '''
				<script type="text/javascript" src="draganddrop.js"></script>
			'''			
		}
		if (containsTextualDragAndDrop==1){
			fileindex = fileindex + '''
				<script type="text/javascript" src="textualdraganddrop.js"></script>
			'''			
		}
		if (containsContainerTest == 1){
			fileindex = fileindex + '''
				<script type="text/javascript" src="test.js"></script>
			'''
		}
		if (containsTrueFalse == 1){
			filetruefalse = filetruefalse + '''
				$('.switched').change(function() {
				    if ($(this).prop('checked') == true) {
				        $(this).parents('div.row.padtf').css('background-color','rgba(75,187,139,0.5)');
				    } else {
				        $(this).parents('div.row.padtf').css('background-color','rgba(252,60,60,0.5)');
				    }
				})				
			'''
			fileindex = fileindex + '''
				<script type="text/javascript" src="truefalse.js"></script>
			'''
		}
		
		
		if (cu.type.value != 0){			
			fileindex = fileindex + '''
					<script>
					   	sinConexionREST = 1;
					</script>
				'''
		}
		
		/*if (pathcadena !== null){
			if (pathcadena.contains("preview")){
				fileindex = fileindex + '''
					<script>
					   	sinConexionREST = 1;
					</script>
				'''
			}
		}else{
			fileindex = fileindex + '''
				<script>
				   	sinConexionREST = 1;
				</script>
			'''		
		}*/
		

		
		progresoobj = progresoobj + ''');'''.toString()

		if (primervideo == 1){
			fsa.generateFile("video.js",filevideo1+'''function onYouTubeIframeAPIReady(){'''+filevideo2+'''}'''+filevideo3);  			
		}
				
		fsa.generateFile("index.php",fileindex)  
		fsa.generateFile("progreso_obj.js",progresoobj)
//		if (css3==1){
//			fsa.generateFile("animation.js",fileanimation); 		
//			fsa.generateFile("animation.css",fileanimationcss);
//		}
		fsa.generateFile("animation.js",fileanimation); 		
		fsa.generateFile("animation.css",fileanimationcss);
		
		fsa.generateFile("test.js",filetest);
		fsa.generateFile("imagesound.js",fileImageSound);
		fsa.generateFile("schema.js",fileSchema);
		
		filecouples = filecouples + '''
				       function shuffle(array, indexes) {
			                var m = array.length, t, i, ti;
			            
			                // While there remain elements to shuffle…
			                while (m) {
			            
			                    // Pick a remaining element…
			                    i = Math.floor(Math.random() * m--);
			            
			                    // And swap it with the current element.
			                    t = array[m];
			                    ti = indexes[m];
			            
			                    array[m] = array[i];
			                    indexes[m] = indexes[i];
			            
			                    array[i] = t;
			                    indexes[i] = ti;
			                }
			            
			                return array;
			            }
		'''
		fsa.generateFile("couples.js",filecouples);
		fsa.generateFile("truefalse.js",filetruefalse);
		
		if (containsTextualDragAndDrop==1){
			filetextual = filetextual + '''})();'''
			var String filetextualv2 = '''			
				(function () {
					DragDropPlugin.initializePlugin();
			'''+filetextual;
			filetextualv2 = filetextualv2 + '''
				function getAltura(param){
					// quito la altura que hay en css para probar
					$('#drag-options-' + param + ' .drag-item','#drag-options-' + param + ' .drag-container').css('height', 'auto');
					$('#drag-elections-' + param + ' .drag-container, #drag-descriptions-' + param + ' .drag-description').css('height', 'auto');	
					
					// calculamos la altura de la columna de las opciones
					var maxHeightOptions = Math.max.apply(null, $("div#drag-options-"+ param + ">div.drag-container>div.drag-item").map(function ()
					{	
						var alturasumada = parseInt($(this).height()); // paso la altura a int
						alturasumada = alturasumada + 15; // sumamos el padding de 15px para obtener la altura real
					
						return alturasumada;
					}).get());
					
					// calculamos la altura de la columna de las definiciones
					var maxHeightDescription = Math.max.apply(null, $("div#drag-descriptions-" + param + ">div.drag-description").map(function ()
					{
						var alturasumada = parseInt($(this).height()); // paso la altura a int
						alturasumada = alturasumada + 15; // sumamos el padding de 15px para obtener la altura real
					
						return alturasumada;
					}).get());
					
					// obtenemos la altura máxima comparando las dos altura que hemos calculado
					var maxHeight = ((maxHeightOptions < maxHeightDescription) ? maxHeightDescription : maxHeightOptions);
					
					// establecemos la altura máxima en el css
					$('#drag-options-' + param + ' .drag-container .drag-item').css('height', maxHeight);
					$('#drag-options-' + param + ' .drag-container').css('height', maxHeight);
					$('#drag-elections-' + param + ' .drag-container, #drag-descriptions-' + param + ' .drag-description').css('height', maxHeight);	
				}
			'''
			fsa.generateFile("textualdraganddrop.js",filetextualv2); 		
		}
	} 
	}